{"version":3,"sources":["img/splash.GIF","components/Cover/Cover.tsx","components/Navbar/Navbar.tsx","components/Rubric/RubricTabs.tsx","components/Rubric/ScheduleListItem.tsx","components/Rubric/ScheduleList.tsx","icons.tsx","components/HistoryList.tsx","config.ts","Airtable.ts","Helpers.ts","components/Rubric/Rubric.tsx","components/Profile/LevelBubble/LevelBubble.tsx","components/Profile/ProfileTabs.tsx","components/Profile/ToDoCardList.tsx","components/Profile/Profile.tsx","components/LessonCard/LessonCard.tsx","interfaces.tsx","components/ModalCardComponent.tsx","Api.ts","App.tsx","index.tsx"],"names":["module","exports","Cover","this","props","background","height","className","style","minHeight","children","React","Component","Navar","go","dataTo","meta","buttonColor","osname","platform","IOS","marginTop","left","onClick","data-to","data-meta","color","RubricTabs","rubric","history","onClickHandler","selectedTab","lessons","selected","length","ScheduleListItem","lesson","onCellClick","expandable","multiline","lessonID","recID","before","description","substring","ScheduleList","state","isLoading","Object","keys","map","key","i","les","header","replace","index","star","fill","width","viewBox","xmlns","d","logo","fillRule","clipRule","HistoryList","parseDate","iso","date","Date","month","getMonth","getDate","getFullYear","toLocaleTimeString","parseHistory","renderImage","el","mode","size","src","renderModalData","videoId","opts","playerVars","start","autoplay","renderBottom","stars","exp","display","filter","openModal","type","data","body","caption","actions","bottom","renderTitle","AIR_CONFIG","apikey","base","tLOGS","tUSERS","AirtableConnector","config","air","list","listname","options","a","filterByFormula","generateFilterstring","getByID","id","find","create","params","update","delete","rec_ids","listName","fileds","arr","reg","value","condition","isNaN","push","join","Airtable","endpointUrl","apiKey","Promise","resolve","reject","cells","select","eachPage","records","fetchNextPage","forEach","fields","rec_id","err","console","error","record","arrays","splice","bunch","setTimeout","field","destroy","Air","parseQueryString","string","slice","split","queryParam","kvp","reduce","query","Time","setHours","getHours","toTimeString","formatLessonTime","0","1","2","3","4","5","6","getDay","Rubric","_isMounted","purchases","activeTab","goods","getPurchases","user","catch","log","res","pursh","renderAbonement","good","getLessons","setState","fetchHistoryData","userID","rubricID","rubricTable","then","item","e","obj","days","day","items","currentTarget","dataset","tabName","current","next","title","Math","round","paddingLeft","source","LevelBubble","action","ProfileTabs","tabs","TodoCardsList","achieves","proms","achieve","fetchRubricHistory","userHistory","achievedItems","acivedItem","all","result","RubricID","rubrics","onButtonClick","achive","desc","onButtonClickHandler","buttonLabel","backgroundColor","textDecoration","separator","marginBottom","Profile","events","getEvents","snackbar","top","ANDROID","photo_200","need_exp_to_level_up","levelExperience","next_level","current_level","event","backTo","lineHeight","marginLeft","event_type","removeMd","asideContent","tp","Typograf","locale","LessonCard","message","selectedFile","hasAccess","sendData","purchase","api","accruals","user_rec_id","comment","event_rec_id","amount","purchase_ids","queryParams","window","location","search","vk_are_notifications_enabled","bridge","send","Error","undo","_","href","checkPermissions","fetchRubric","fetchData","fetchLessonData","onBackClick","rub","renderPaymentBlock","padding","stretched","target","execute","frameBorder","allow","allowfullscreen","details","renderDetails","paddingBottom","renderDetailsBlock","vertical","label","renderBottomBar","iAchieve","iRubric","ModalCardComponent","modalData","onClose","EventTypes","EventType","Events","include_event_type","event_type_id","Event","Levels","Level","Goods","view","Good","User","Users","vk_id","resp","Accruals","name","email","Accrual","opt","sort","direction","max_records","maxRecords","last_month","toISOString","file_urls","isAvailableToUser","level","level_no","event_types","airtable_conf","levels","users","splashLoader","splash","alt","App","fetchUserData","initUser","first_name","last_name","setLocation","route","activeView","onRubricCellClickHandler","fetchLessons","fetchGoods","activeModal","authToken","setActiveModal","bind","modal","subscribe","detail","hashParams","hash","r","access_token","userData","fetchRubricsData","fetchUserPurchases","air_schema","f_users","fetchAchieves","fetchEventsByUser","Number","need_level_exp","user_level_exp","assign","t_purchases","f_purchases","status","undefined","user_id","visited_events","right","settlingHeight","activePanel","rubricCellClickHandler","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9847313d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/splash.75e96a0e.GIF\";","import React from 'react';\nimport { Div } from '@vkontakte/vkui'\nimport './Cover.css'\n\nexport default class Cover extends React.Component<any, any> {\n\n\n    render() {\n\n        const {\n            background,\n            height\n        } = this.props\n        return (\n            <Div className=\"cover\" style={{ height: height ? height : '38vh', minHeight: '38vh', background: background ? background : 'linear-gradient(200.98deg, #485563 -13.11%, #29323C 75.28%)' }}>\n                {/* {(() => content)()} */}\n                <div className=\"coverContainer\">{this.props.children}</div>\n            </Div>\n        )\n    }\n}\n\n","import React from 'react'\nimport { PanelHeader, platform, IOS, PanelHeaderBack } from \"@vkontakte/vkui\";\n\n\nexport default class Navar extends React.Component<any, any> {\n    render() {\n        let { go, dataTo, meta, buttonColor} = this.props\n        const osname = platform();\n    \n        return (<PanelHeader className=\"navBar\" style={(() => osname === IOS ? {} : { marginTop: '81px' })()} left={<PanelHeaderBack onClick={go} data-to={dataTo} data-meta={meta} style={{color: buttonColor}}/>}>{this.props.children}</PanelHeader>)\n    }\n}","import React from 'react'\nimport { Tabs, TabsItem, HorizontalScroll } from '@vkontakte/vkui'\n\ninterface iRubricTabs {\n    rubric: any\n    history: any[]\n    lessons: any[]\n    onClickHandler: (tabName: string) => void\n    selectedTab: string\n}\n\nexport default class RubricTabs extends React.Component<iRubricTabs, any> {\n\n    render() {\n        let { rubric, history, onClickHandler, selectedTab, lessons } = this.props\n        \n        return <Tabs>\n            <HorizontalScroll>\n            {(lessons)\n                ?\n                <TabsItem\n                    onClick={() => onClickHandler('schedule')}\n                    selected={selectedTab === 'schedule'}\n                >Расписание</TabsItem>\n                : null\n\n            }\n\n\n\n            {(history && history.length !== 0)\n                ? <TabsItem\n                    onClick={() => onClickHandler('history')}\n                    selected={selectedTab === 'history'}\n                >Прогресс</TabsItem>\n                : null\n            }\n\n            {(rubric['Описание'])\n                ? <TabsItem\n                    onClick={() => onClickHandler('desc')}\n                    selected={selectedTab === 'desc'}\n                >О рубрике</TabsItem>\n                : null\n\n            }\n\n            </HorizontalScroll>\n            \n        </Tabs>\n    }\n}","import React from 'react'\nimport { Cell } from '@vkontakte/vkui'\n\ninterface iScheduleListItem {\n    lesson: any\n    onCellClick: (lesson: any) => void\n}\nexport default class ScheduleListItem extends React.Component<iScheduleListItem, any>{\n\n\n    render() {\n\n        let { lesson, onCellClick } = this.props\n        return <Cell\n            expandable\n            multiline\n            onClick={()=>onCellClick({ lessonID: lesson.recID })}\n            before={<div className=\"time\"></div>}\n            description={`${lesson['Время']} ${lesson['Описание'] ? ',' + lesson['Описание'].substring(0, 70) : ''}`}\n        >\n            {`${lesson['Name']}`}\n        </Cell>\n    }\n\n}","import React from 'react'\nimport { Group } from '@vkontakte/vkui'\nimport ScheduleListItem from './ScheduleListItem';\n\ninterface iScheduleList {\n    rubric: any\n    onCellClick: (meta: any) => void\n    lessons: any[]\n}\n\n\n\nexport default class ScheduleList extends React.Component<iScheduleList, any>{\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: true\n        }\n    }\n\n\n    render() {\n        let { lessons, onCellClick } = this.props\n        let days = Object.keys(lessons);\n        return days.map((key, i) => {\n            let les = lessons[key];\n            return <div className=\"calendarWrapper\" key={i}>\n                <Group header={<h1 className=\"calendarHeader\">{key.replace(/(\\d+\\s\\D{3}?).+/gs, '$1') + \", \" + les['day']}</h1>}  >\n                    {(() => {\n                        let less = lessons[key]['items']\n                        return less.map((lesson, index) => {\n                            return (<ScheduleListItem key={index} lesson={lesson} onCellClick={onCellClick} />)\n                        })\n                    })()}\n                </Group>\n            </div>\n        })\n\n\n\n    }\n}","import React from 'react';\n\nexport const star = (fill: string) => <svg width=\"24\" height=\"22\" viewBox=\"0 0 24 22\" xmlns=\"http://www.w3.org/2000/svg\" fill={fill}>\n<path d=\"M12 0L14.8214 8.11672L23.4127 8.2918L16.5651 13.4833L19.0534 21.7082L12 16.8L4.94658 21.7082L7.43493 13.4833L0.587322 8.2918L9.17863 8.11672L12 0Z\" />\n</svg>;\n\nexport const logo = <svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M15.2 2.6636L7.93161 18.2513H11.033C12.0258 18.2513 12.012 19.799 10.9916 19.799H6.74475C6.12427 19.799 5.8485 19.1496 6.0829 18.6383C6.26215 18.2582 6.43796 17.8782 6.61376 17.4982C6.78956 17.1182 6.96537 16.7382 7.14462 16.3581C9.61277 11.024 12.0671 5.70377 14.5215 0.383494L14.5215 0.383475C14.7559 -0.127825 15.6246 -0.127825 15.859 0.383475C16.0382 0.763482 16.214 1.14349 16.3898 1.5235C16.5656 1.90353 16.7414 2.28356 16.9207 2.6636C18.5971 6.29748 20.2799 9.93137 21.9648 13.5697C22.7467 15.2581 23.529 16.9475 24.3114 18.6383C24.5596 19.1496 24.27 19.799 23.6495 19.799H16.0244V23.2538C16.0244 24.2487 14.4801 24.2487 14.4801 23.2538V19.0252C14.4801 18.6106 14.8386 18.2513 15.2523 18.2513H22.4614L15.2 2.6636ZM24.4 1.4C24.4 0.626843 23.7731 1.11759e-08 23 1.11759e-08C22.2268 1.11759e-08 21.6 0.626843 21.6 1.4C21.6 2.17316 22.2268 2.8 23 2.8C23.7731 2.8 24.4 2.17316 24.4 1.4Z\" fill=\"white\" />\n</svg>","import React from 'react'\nimport { Group, Div, List, Avatar, Button, RichCell } from '@vkontakte/vkui'\nimport { star } from '../icons'\nimport { iModalData } from '../interfaces';\nimport Youtube from 'react-youtube'\n\n\ninterface iHistoryList {\n    history: any[],\n    openModal: (modal: { type: string, data?: iModalData }) => void\n}\nexport default class HistoryList extends React.Component<iHistoryList, any>{\n\n    parseDate = (iso: string) => {\n        var arr = [\n            'января',\n            'февраля',\n            'марта',\n            'апреля',\n            'мая',\n            'июня',\n            'июля',\n            'августа',\n            'сентября',\n            'октября',\n            'ноября',\n            'декабря',\n        ];\n        let date = new Date(iso)\n        let month = arr[+date.getMonth()];\n        const result = `${date.getDate()} ${month} ${date.getFullYear()}, ${date.toLocaleTimeString().replace(/(.*:.*?):\\d+/gs, '$1')}`\n        return result\n    }\n\n\n    private parseHistory = (history: any[]) => {\n\n        const renderTitle = (el) => {\n            if (el['Макет'] && !el['Оценка']) return <span>Ожидает разбора</span>\n\n            if (el['Оценка']) return <span>{el['Оценка']}</span>\n\n            if (el['Баллы'] > 0 && el['Опыт'] && el['Опыт'] > 0) {\n                return <span><span>{el['Баллы']}</span><span className=\"star\">{star('#000000')}</span><span>,&nbsp;{el['Опыт']}&nbsp;опыта {(() => el['Комментарий'] ? \"• \" + el['Комментарий'] : \"\")()}</span></span>\n            } else if (el['Баллы'] === 0 && el['Опыт'] && el['Опыт'] > 0) {\n                return <span>{el['Опыт']}&nbsp;опыта {(() => el['Комментарий'] ? \"• \" + el['Комментарий'] : \"\")()}</span>\n\n            } else if (!el['Опыт']) {\n                return <span><span>{el['Баллы']}</span><span className=\"star\">{star('#000000')}</span>{(() => el['Комментарий'] ? \"• \" + el['Комментарий'] : \"\")()}</span>\n\n            }\n        }\n\n        const renderImage = el => {\n            if (!el['Макет']) return\n            return <Avatar mode=\"image\" size={64} src={el['Макет'][0]['url']}></Avatar>\n        }\n\n\n        let renderModalData = (el) => {\n            return <Youtube videoId=\"KG48P6zAdxg\" className=\"video\" opts={{\n                playerVars: {\n                    start: el['feedback_marker'],\n                    autoplay: 1\n                }\n            }} />\n        }\n\n        let renderBottom = (el) => {\n            if (!el['Баллы'] && !el['Опыт']) return\n            let stars = el['Баллы'] ? (<div className=\"amount_counter\" ><span>{el['Баллы']}</span>★</div>) : null\n            let exp = el['Опыт'] ? (<div className=\"amount_counter\" ><span>{el['Опыт']}</span> exp</div>) : null\n            return <div style={{ display: 'flex', marginTop: 'var(--wrapper-padding)' }}>{stars}{exp}</div>\n        }\n\n        return history\n            .filter(el=>el['Макет'])\n            .map((el, i) => {\n                return <RichCell\n                    key={i}\n                    multiline\n                    // expandable={el['Разбор'] ? true : false}\n                    onClick={() => el['Разбор'] ? this.props.openModal({ type: 'modal', data: { body: renderModalData(el) } }) : null}\n                    caption={this.parseDate(el['Датавремя'])}\n                    actions={(() => el['Разбор'] ? <><Button>Смотреть разбор</Button></> : <></>)()}\n                    before={renderImage(el)}\n                    className={(() => !el['Оценка'] ? \"cell_nonactive\" : \"historyCell\")()}\n                    bottom={renderBottom(el)}\n                >{renderTitle(el)}</RichCell>\n            })\n    }\n\n    render() {\n\n        let { history } = this.props\n        \n        return <>\n\n\n            <Group className=\"history\">\n                {(() => {\n                    if (history.length === 0) {\n                        return <Div>Вы пока не участвовали ни в одной активности в этой рубрике.</Div>\n                    }\n                    return <List> {this.parseHistory(history)} </List>\n                })()}\n\n            </Group>\n        </>\n\n\n    }\n\n}","//DEVELOPMENT\n// export const AIR_CONFIG = {\n//     apikey: 'keyCjoy0c7MaRyisi',\n//     base: 'appJJ0nmLtF6XYalJ',\n//     tLOGS: 'Начисления и списания',\n//     tUSERS: 'Участники'\n// }\n\n//PRODUCTION\nexport const AIR_CONFIG = {\n    apikey: 'keyCjoy0c7MaRyisi',\n    base: 'appEXq7BJ3ceoFRtr',\n    // base: 'apprhfMNTLVTiJC5A', //DEV\n    tLOGS: 'Начисления и списания',\n    tUSERS: 'Участники'\n}","\nimport * as  Air from 'airtable';\nimport { iBaseConnector } from \"./BaseConnector\";\n\n\n\n\nexport interface iSort { field: string, direction: \"desc\" | \"asc\" }\n\n// export interface any {\n//     title?: string\n//     level?: number\n//     name?: string\n// }\n\nexport interface iAirtableListOptions {\n    filter?: any\n    filterByFormula?: string\n    fields?: Array<string>,\n    sort?: iSort[],\n    view?: string,\n    maxRecords?: number | string\n}\n\n\nexport interface iAirConfig {\n    apikey: string\n    base: string\n}\n\nexport interface iAirtableCreateOptions {\n    fields: any\n}\n\nexport interface iAirtableUpdateOptions {\n    id: string\n    fields: any\n}\n\nexport interface iAttachment {\n    url: string\n}\n\n\nexport class AirtableConnector implements iBaseConnector {\n    private air: Airtable\n\n    constructor(config: any) {\n        this.air = new Airtable(config);\n    }\n    list = async (listname: string, options?: iAirtableListOptions): Promise<any[]> => {\n        if (options && options.filter) {\n            options.filterByFormula = this.generateFilterstring(options.filter)\n\n            delete options.filter\n        }\n        return this.air.list(listname, options)\n    }\n    getByID = async (id: string, listname: string): Promise<any> => this.air.find(id, listname)\n    create = async (data: iAirtableCreateOptions[], listname: string, params?: { typecast: boolean }): Promise<any[]> => this.air.create(data, listname, params)\n    update = async (data: iAirtableUpdateOptions[], listname: string, params?: { typecast: boolean }): Promise<any[]> =>this.air.update(data, listname, params)\n    delete = async (rec_ids: string[], listName: string): Promise<any> => this.air.delete(rec_ids, listName)\n\n    protected generateFilterstring = (fileds: any): string => {\n\n        let keys = Object.keys(fileds)\n\n        let arr: string[] = []\n        keys.map(key => {\n            let reg = /^([><=!]*)(.*)/gs\n            let value = fileds[key].replace(reg, '$2');\n            let condition = fileds[key].replace(reg, '$1')\n\n            if (value === 'null') value = 'BLANK()'\n            else if (isNaN(value)) value = \"'\" + value + \"'\"\n\n            arr.push((condition === '!=') ? 'NOT({' + key + '}=' + value + ')' : '{' + key + '}' + condition + value)\n            return key\n        })\n\n        return (arr.length === 1) ? arr[0] : 'AND(' + arr.join(', ') + ')'\n    }\n}\n\n\nexport default class Airtable extends Air {\n\n    private base: any\n\n\n    constructor(config: iAirConfig) {\n        super({ endpointUrl: 'https://api.airtable.com', apiKey: config.apikey })\n        this.base = super.base(config.base)\n    }\n\n\n\n\n    list = async (listName: string, options?: iAirtableListOptions) =>\n        new Promise<Array<any>>((resolve, reject) => {\n            let cells: any[] = []\n\n\n\n            this.base(listName).select(options ? options : {})\n                .eachPage(function page(records: any[], fetchNextPage: () => void) {\n                    records\n                        .forEach(el => {\n                            el.fields.rec_id = el.id\n                            cells.push(el.fields)\n                        })\n\n                    // This function (`page`) will get called for each page of records.\n                    fetchNextPage()\n\n                }, function done(err: any) {\n                    if (err) { console.error(err); reject(err); return; }\n                    resolve(cells)\n                })\n\n        })\n\n\n\n\n\n    find = async (rec_id: string, listName: string) =>\n        new Promise<any>((resolve, reject) => {\n            this.base(listName).find(rec_id, function (err: any, record: any) {\n                if (err) { reject(err); return; }\n                if (!record) { reject('no record: ' + rec_id) }\n                record.fields.rec_id = record.id\n                resolve(record.fields)\n            })\n        });\n\n    create = async (fields: iAirtableCreateOptions[], listName: string, params?: { typecast: boolean }) =>\n        new Promise<any[]>(async (resolve, reject) => {\n\n            let arrays: any[] = [],\n                size = 10\n\n            while (fields.length > 0) arrays.push(fields.splice(0, size))\n            for (const bunch of arrays) {\n\n                await this.base(listName).create(bunch, params, function (err: any, records: any[]) {\n                    if (err) { console.error(err); return; }\n                    resolve(records.map(record => {\n                        record.fields.rec_id = record.id\n                        return record.fields\n                    }))\n                })\n\n                await setTimeout(() => { }, 2000)\n            }\n\n        })\n\n\n    replace = (rec_id: string, field: any, listName: string) =>\n        new Promise(resolve => {\n\n            this.base(listName)\n                .replace(rec_id, field, (err: any, record: any) => {\n                    if (err) { console.error(err); return; }\n                    record.fields.rec_id = record.id\n                    resolve(record.fields)\n                })\n        })\n\n    update = (params: iAirtableUpdateOptions[], listName: string, options?: { typecast: boolean }) =>\n        new Promise<any[]>(async (resolve, reject) => {\n\n            var arrays: any[] = [],\n                size = 10\n\n            while (params.length > 0) arrays.push(params.splice(0, size))\n            for (const bunch of arrays) {\n\n                await this.base(listName).update(bunch, options, (err: any, records: any[]) => {\n                    if (err) {\n                        console.error(err)\n                        reject(err)\n                    }\n                    resolve(records.map(record => {\n                        record.fields.rec_id = record.id\n                        return record.fields\n                    }))\n                })\n\n                await setTimeout(() => { }, 2000)\n            }\n\n\n\n        })\n\n\n    delete = (rec_ids: string[], listName: string) =>\n        new Promise((resolve, reject) => {\n            this.base(listName).destroy(rec_ids, (err: any, record: any) => {\n                if (err) {\n                    console.error(err)\n                    reject(err)\n                }\n                resolve(rec_ids)\n            })\n        })\n\n}\n","export const parseQueryString = (string) => {\n    return string.slice(1).split('&')\n        .map((queryParam) => {\n            let kvp = queryParam.split('=');\n            return { key: kvp[0], value: kvp[1] }\n        })\n        .reduce((query, kvp) => {\n            query[kvp.key] = kvp.value;\n            return query\n        }, {})\n};\n\nexport const parseDate = (iso: string) => {\n    var arr = [\n        'января',\n        'февраля',\n        'марта',\n        'апреля',\n        'мая',\n        'июня',\n        'июля',\n        'августа',\n        'сентября',\n        'октября',\n        'ноября',\n        'декабря',\n    ];\n    let date = new Date(iso)\n    let month = arr[+date.getMonth()];\n    const result = `${date.getDate()} ${month} ${date.getFullYear()}, ${date.toLocaleTimeString().replace(/(.*:.*?):\\d+/gs, '$1')}`\n    return result\n}\n\nexport function Time(date) {\n    var d = new Date(date);\n    d.setHours(d.getHours());\n    let res = d.toTimeString().substring(0, 5);\n    return res;\n\n}\n\n\nexport function formatLessonTime(el: any) {\n    const days = {\n        0: 'вс',\n        1: 'пн',\n        2: 'вт',\n        3: 'ср',\n        4: 'чт',\n        5: 'пт',\n        6: 'сб'\n    }\n\n    let key = parseDate(el['Дата']).replace(/^(\\d+\\s.+?)\\s.+/gs, '$1');\n    el['День недели'] = days[new Date(el['Дата']).getDay()]\n    el['Время'] = Time(el['Дата'])\n    el['Дата'] = key;\n    return el\n}\n\n\nexport function declOfNum(number, titles) {  \n    let cases = [2, 0, 1, 1, 1, 2];  \n    return titles[ (number%100>4 && number%100<20)? 2 : cases[(number%10<5)?number%10:5] ];  \n}\n","import React from 'react';\nimport { Panel, Div, Card, Group, Progress, InfoRow } from '@vkontakte/vkui';\n\nimport \"./Rubric.css\";\nimport Cover from '../Cover/Cover';\nimport ReactMarkdown from 'react-markdown';\nimport Navbar from '../Navbar/Navbar';\n\nimport RubricTabs from './RubricTabs';\nimport ScheduleList from './ScheduleList';\nimport HistoryList from '../HistoryList';\n\n\nimport { AIR_CONFIG } from '../../config'\nimport Airtable from '../../Airtable';\nimport { parseDate, Time } from '../../Helpers';\n\nlet base = new Airtable(AIR_CONFIG)\n\n\ninterface iRubricPage {\n\tid: string\n\tuser: any\n\trubric: any\n\tgo: (route: string, meta?: any) => void\n\trubricCellClickHandler: (dataTo: string, metaData: any) => void\n\tgetLessons: () => Promise<any[]>\n}\n\n\nclass Rubric extends React.Component<iRubricPage, any> {\n\n\t_isMounted: boolean = false\n\n\tstate = {\n\t\tpurchases: null,\n\t\tlessons: null,\n\t\tactiveTab: null,\n\t\tgoods: null,\n\t\thistory: []\n\t}\n\n\n\n\n\tasync componentDidMount() {\n\t\tthis._isMounted = true\n\t\tlet { rubric } = this.props\n\t\tconst lessons = await this.getLessons()\n\n\t\tthis.setState({ lessons: lessons });\n\n\t\tlet history = await this.fetchHistoryData(this.props.user.id, rubric['recID'], rubric['Таблица'])\n\t\tlet purchases = await this.getPurchases()\n\t\tif(this._isMounted) {\n\t\t\tthis.setState({ history: history })\n\t\t\tif (lessons && Object.keys(lessons).length !== 0) {\n\t\t\t\tthis.setState({ activeTab: 'schedule' })\n\t\t\t} else if (history.length !== 0) {\n\t\t\t\tthis.setState({ activeTab: 'history' })\n\t\t\t} else {\n\t\t\t\tthis.setState({ activeTab: 'desc' })\n\t\t\t}\n\n\t\t\tthis.setState({ purchases:  purchases });\n\t\t}\n\t\t\n\t}\n\n\n\n\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t}\n\n\n\tasync fetchHistoryData(userID: number, rubricID: string, rubricTable: string) {\n\t\treturn base.list(rubricTable, { filterByFormula: `AND({VK-ID} = ${userID}, NOT({Рубрика}=BLANK()))` }).then((history: any[]) => {\n\t\t\treturn history.filter(item => item['Рубрика'][0] === rubricID)\n\t\t}).catch(e => [])\n\t}\n\n\n\tasync getLessons() {\n\t\treturn this.props.getLessons().then(res=>res.filter(el=>el['RubricID']===this.props.rubric.recID))\n\t\t.then((res: any[]) => {\n\n\t\t\tif (res.length === 0) return\n\t\t\tlet obj = {}\n\n\n\t\t\tconst days = {\n\t\t\t\t0: 'вс',\n\t\t\t\t1: 'пн',\n\t\t\t\t2: 'вт',\n\t\t\t\t3: 'ср',\n\t\t\t\t4: 'чт',\n\t\t\t\t5: 'пт',\n\t\t\t\t6: 'сб'\n\t\t\t}\n\n\t\t\tres.forEach(el => {\n\t\t\t\tlet key = parseDate(el['Дата']).replace(/^(\\d+\\s.+?)\\s.+/gs, '$1');\n\t\t\t\tlet date = new Date(el['Дата']);\n\n\t\t\t\tobj[key] = {\n\t\t\t\t\tdate: key,\n\t\t\t\t\tday: days[date.getDay()],\n\t\t\t\t\titems: []\n\t\t\t\t}\n\n\n\t\t\t})\n\n\n\n\n\t\t\tres.forEach(el => {\n\t\t\t\tlet key = parseDate(el['Дата']).replace(/^(\\d+\\s.+?)\\s.+/gs, '$1');\n\t\t\t\tel['День недели'] = days[new Date(el['Дата']).getDay()]\n\t\t\t\tel['Время'] = Time(el['Дата'])\n\t\t\t\t// el['Окончание'] = Time(el['Время окончания'])\n\t\t\t\tel['Дата'] = key;\n\t\t\t\tel['rubric'] = this.props.rubric;\n\t\t\t\tobj[key]['items'].push(el)\n\t\t\t})\n\n\t\t\tconsole.log(obj)\n\t\t\treturn obj\n\t\t})\n\t}\n\n\n\n\tselect(e) {\n\t\tconst mode = e.currentTarget.dataset.mode;\n\t\tthis.setState({ mode });\n\t}\n\n\n\n\n\n\tgetPurchases = async () => {\n\t\tconst user = this.props.user;\n\t\tconst rubric = this.props.rubric;\n\t\tlet res = await base.list('Покупки', { filterByFormula: `AND({VK-ID}=${user.id}, {Статус}=BLANK() )`, fields: [\"Название\", \"Рубрика\", \"Осталось\", \"Датавремя\", \"Кол-во тренировок\", \"Посещеные тренировки\"] }).catch(err => {\n\t\t\tconsole.log(err);\n\t\t\treturn [];\n\t\t}) as [];\n\n\t\tlet pursh = res.filter(el => el['Осталось'] && el['Рубрика'] && el['Рубрика'][0] === rubric.recID)\n\t\treturn pursh[0];\n\t}\n\n\trenderAbonement = () => {\n\n\t\tif (!this.state.goods) return;\n\n\t\treturn this.state.goods.map((good, i) => {\n\n\t\t\treturn <Card size=\"l\" key={i}>\n\t\t\t\t<div className=\"abonement\">\n\t\t\t\t\t<h2>{good[\"Название товара\"]}</h2>\n\t\t\t\t</div>\n\t\t\t</Card>\n\t\t})\n\t}\n\n\n\n\trender() {\n\n\t\tlet {\n\t\t\tgo,\n\t\t\trubric,\n\t\t} = this.props\n\n\n\n\t\t// const cover = () => rubric['Обложка'] ? `url(${rubric['Обложка'][0]['url']}) center/cover no-repeat` : '';\n\n\t\treturn (\n\n\t\t\t<Panel id='rubric'>\n\n\t\t\t\t<Navbar go={() => go('profile')} dataTo='profile'></Navbar>\n\n\t\t\t\t<Cover height=\"fit-content\">\n\t\t\t\t\t{/* <Cover background={cover()} height=\"fit-content\"> */}\n\t\t\t\t\t<Div className=\"desc\"><h1>{rubric['Название']}</h1></Div>\n\t\t\t\t</Cover>\n\n\n\t\t\t\t<RubricTabs\n\t\t\t\t\trubric={rubric}\n\t\t\t\t\tselectedTab={this.state.activeTab}\n\t\t\t\t\tlessons={this.state.lessons}\n\t\t\t\t\thistory={this.state.history}\n\t\t\t\t\tonClickHandler={(tabName) => this.setState({ activeTab: tabName })}\n\t\t\t\t/>\n\n\t\t\t\t{(() => {\n\t\t\t\t\tif (!rubric['Итог опыт'] || !this.state.history) return\n\n\t\t\t\t\tlet exp = this.state.history.filter(el => el['Опыт']).map(el => el['Опыт']).reduce((current, next) => current + next, 0);\n\t\t\t\t\treturn <Group title=\"Прогресс\" className=\"progressBarContainer\">\n\t\t\t\t\t\t<InfoRow header={`${Math.round((exp * 100) / rubric['Итог опыт'])}%`} className=\"progressBar\">\n\t\t\t\t\t\t\t<Progress value={(exp * 100) / rubric['Итог опыт']} style={{ width: '100%' }} />\n\t\t\t\t\t\t</InfoRow>\n\t\t\t\t\t</Group>\n\t\t\t\t})()}\n\n\t\t\t\t{(this.state.activeTab === 'desc' && rubric['Описание'])\n\t\t\t\t\t? <Div style={{ paddingLeft: 'var(--wrapper-padding-2x)' }}><ReactMarkdown source={rubric['Описание']} /> </Div>\n\t\t\t\t\t: ''\n\t\t\t\t}\n\n\n\n\t\t\t\t{(this.state.activeTab === 'history') ? <HistoryList history={this.state.history} /> : ''}\n\n\n\t\t\t\t{(() => {\n\t\t\t\t\tif (this.state.activeTab !== 'schedule') return;\n\t\t\t\t\treturn <ScheduleList\n\t\t\t\t\t\tlessons={this.state.lessons}\n\t\t\t\t\t\tonCellClick={(e) => this.props.go('lesson', e)}\n\t\t\t\t\t\trubric={rubric}\n\t\t\t\t\t/>\n\t\t\t\t})()}\n\n\t\t\t</Panel>\n\n\t\t);\n\t}\n}\n\n\nexport default Rubric;","import React from 'react';\nimport './LevelBubble.css'\n\nexport default class LevelBubble extends React.Component<any, any> {\n    render() {\n\n        let {\n            action\n        } = this.props\n\n        return (\n            <div className=\"levelBubble\" onClick={action ? action : null}>{this.props.children}</div>\n        )\n    }\n}","import React from 'react'\nimport { Tabs, TabsItem, HorizontalScroll } from '@vkontakte/vkui'\n\ninterface iProfileTabs {\n    tabs: string[]\n    history: any[]\n    onClickHandler: (tabName: string) => void\n    selectedTab: string\n}\n\nexport default class ProfileTabs extends React.Component<iProfileTabs, any> {\n\n    render() {\n        let { history, onClickHandler, selectedTab, tabs } = this.props\n\n        if (!tabs || tabs.length === 0) return null\n\n        return <Tabs>\n            <HorizontalScroll>\n\n                {\n                    (() => {\n                        if (tabs.find(el => el === 'tasks')) {\n                            return <TabsItem\n                                onClick={() => onClickHandler('tasks')}\n                                selected={selectedTab === 'tasks'}\n                            >Задания</TabsItem>\n                        }\n                    })()\n                }\n\n                {\n                    (() => {\n                        if (tabs.find(el => el === 'achieves')) {\n                            return <TabsItem\n                                onClick={() => onClickHandler('achieves')}\n                                selected={selectedTab === 'achieves'}\n                            >Достижения</TabsItem>\n                        }\n                    })()\n                }\n\n\n                {(history && history.length !== 0 && tabs.find(el => el === 'history'))\n                    ? <TabsItem\n                        onClick={() => onClickHandler('history')}\n                        selected={selectedTab === 'history'}\n                    >Разборы</TabsItem>\n                    : null\n                }\n\n                {\n                    (() => {\n                        if (tabs.find(el => el === 'rubrics')) {\n                            return <TabsItem\n                                onClick={() => onClickHandler('rubrics')}\n                                selected={selectedTab === 'rubrics'}\n                            >Рубрики</TabsItem>\n                        }\n                    })()\n                }\n\n\n\n\n            </HorizontalScroll>\n        </Tabs>\n    }\n}","import React from 'react'\nimport { Group, List, Cell, } from '@vkontakte/vkui';\nimport { iModalData, iUser, iAchieve, iRubric } from '../../interfaces';\nimport { AIR_CONFIG } from '../../config'\nimport Airtable from '../../Airtable';\n\n\nlet base = new Airtable(AIR_CONFIG)\n\n\n\ninterface iTodoCardsList {\n    user: iUser\n    achieves: iAchieve[]\n    openModal: (modal: { type: string, data: iModalData }) => void\n    onButtonClick?: (route: string, meta: any) => void\n    rubrics: iRubric[]\n}\n\nexport default class TodoCardsList extends React.Component<iTodoCardsList, any> {\n    _isMounted: boolean = false\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            achieves: null\n        }\n    }\n    async componentDidMount() {\n        this._isMounted = true\n        let proms = this.props.achieves.map(achieve => this.fetchRubricHistory(achieve).then((userHistory: any[]) => {\n            achieve.achievedItems = userHistory || []\n            let acivedItem = userHistory.filter(el => el['Ачивка']).find(el => el['Ачивка'][0] === achieve.recID)\n            achieve.acivedItem = acivedItem\n            return achieve\n        }))\n\n        let result = await Promise.all(proms);\n\n        if (this._isMounted) {\n            this.setState({\n                achieves: result\n            })\n        }\n\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    async fetchRubricHistory(record: iAchieve) {\n\n        return base.list(record['Таблица'], {\n            filterByFormula: `AND(\n                {VK-ID}=${this.props.user.id}, \n                {Средняя} >= ${record['Оценка']}, \n                {RubricID}='${record.RubricID}',\n                NOT({Ачивка}=BLANK())\n                )`\n        })\n            .catch(e => {\n                console.error(e)\n                return []\n            })\n    }\n\n\n\n\n    render() {\n\n        let { achieves, openModal, rubrics, onButtonClick } = this.props\n\n        // const checkIfTaskDone = (task: any): boolean => {\n        //     if (!task['Участники']) return false\n        //     const id = task['Участники'].find(el => el === user.recID)\n        //     if (id) return true\n        //     return false\n        // }\n\n        const cells = (arr: iAchieve[]) => {\n            return arr.map((achive, i) => {\n\n                return <Cell\n                    key={i}\n                    multiline\n                    onClick={() => openModal({\n                        type: 'modal',\n                        data: {\n                            title: achive['Name'],\n                            desc: achive['Описание'],\n                            onButtonClickHandler: () => onButtonClick('rubric', rubrics.find(el => el.recID === achive.RubricID)),\n                            buttonLabel: 'Перейти в рубрику'\n                            // body: (<Div>Вот мой прогресс</Div>)\n                        }\n                    })}\n                    data-to='lesson'\n\n                    before={<div className=\"roundContainer\">\n                        <div className=\"round\">\n                            <label className=\"roundCircle\" style={achive.acivedItem ? { backgroundColor: 'var(--color-spacegray)' } : { backgroundColor: '#fff' }}></label>\n                        </div>\n                    </div>}\n\n                    description={!achive.acivedItem ? `Выполнено ${achive.achievedItems ? achive.achievedItems.length : 0} из ${achive[\"Кол-во работ\"]}` : `+ ${achive.acivedItem['Опыт']} опыта`}\n                >\n                    <div style={achive.acivedItem ? { textDecoration: 'line-through', color: 'var(--color-spacegray)' } : {}}>{`${achive['Name']}`}</div>\n                </Cell>\n            })\n        }\n\n        return <Group separator=\"hide\" style={{marginBottom: 'calc(var(--wrapper-padding-2x) * 3)'}}>\n\n            <List >\n                {cells(achieves.filter(el => !el.acivedItem).slice(0, 4))}\n                {cells(achieves.filter(el => el.acivedItem))}\n            </List>\n        </Group>\n    }\n}","import React from 'react'\n\nimport { Panel, Cell, List, PanelHeader, Group, Avatar, platform, ANDROID, Progress, Card, CardScroll, Header, Div, CardGrid } from '@vkontakte/vkui'\nimport Icon24BrowserForward from '@vkontakte/icons/dist/24/browser_forward'\nimport \"./Profile.css\"\nimport Cover from '../Cover/Cover'\nimport { star, logo } from '../../icons'\nimport LevelBubble from './LevelBubble/LevelBubble'\nimport ProfileTabs from './ProfileTabs'\nimport HistoryList from '../HistoryList'\nimport TodoCardsList from './ToDoCardList'\nimport { iModalData, iUser } from '../../interfaces'\nimport * as removeMd from 'remove-markdown';\nimport { formatLessonTime } from '../../Helpers'\nimport { iApi } from '../../Api'\n\ninterface iProfilePage {\n    id: string,\n    rubrics: any[]\n    go: (route: string, meta?: any) => void\n    user: iUser\n    snackbar: any\n    history: any[]\n    achieves: any[]\n    openModal: (modal: { type: string, data?: iModalData }) => void\n    events: any[]\n    getEvents: () => Promise<any[]>\n    api: iApi\n}\n\n\n\nclass Profile extends React.Component<iProfilePage, any> {\n\n    _isMounted: boolean = false\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            tabs: ['rubrics', 'history', 'achieves'],\n            selectedTab: 'tasks',\n            events: [],\n            isLoading: false\n        }\n    }\n\n    async componentDidMount() {\n        this._isMounted = true\n        this.setState({ isLoading: true })\n        if (this.props.achieves && this.props.achieves.length !== 0) {\n            if (!this.state.selectedTab) this.setState({ selectedTab: 'tasks' })\n            let tabs = this.state.tabs\n            tabs.push('tasks')\n            this.setState({ tabs: tabs })\n        }\n\n        let events = await this.props.getEvents().then(res => res.map(el => formatLessonTime(el)).filter(el => el['Рубрика'] !== 'Design Exp'))\n\n        if (this._isMounted) {\n            this.setState({ lessons: this.props.events, isLoading: false, events: events })\n        }\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n\n\n    render() {\n\n        let {\n            user,\n            go,\n            rubrics,\n            snackbar,\n            achieves,\n            openModal,\n            events\n        } = this.props\n\n\n\n\n        let cardList = () => {\n            return <Group\n                header={this.state.isLoading ? <div className=\"loader\" style={{ marginLeft: 'var(--wrapper-padding)', height: 'var(--wrapper-padding-2x)', width: '150px', }}></div> : <Header mode=\"secondary\">Участвуй сегодня</Header>}\n                style={{ marginBottom: 'calc(var(--wrapper-padding-2x) * 3)' }}\n                separator=\"hide\"\n            >\n                <CardGrid>\n                    {(() => {\n                        if (this.state.isLoading)\n                            return [1, 2].map((el, i) => <Card key={i} size='m' className='loader' ><Div style={{ width: 144, height: 120 }}></Div></Card>)\n\n                        if (events && events.length !== 0) {\n                            return events.map(lesson => {\n                                //lesson['Обложка'] ? `url(${lesson['Обложка'][0]['url']})` :\n                                return <Card\n                                    key={lesson.recID}\n\n                                    style={{ height: 'fit-content' }}\n                                    size='l'\n                                    mode='shadow'\n                                    onClick={() => go('lesson', { lessonID: lesson.recID, lesson: lesson, backTo: 'profile' })}\n                                >\n                                    <Div style={{}} ><strong>{lesson.event_type['Name']}</strong>\n                                        <p>{removeMd(lesson.event_type['Описание'].slice(0, 200) + '…')}</p>\n                                        <small>{lesson['Рубрика']} • От {lesson['Опыт']} опыта</small></Div>\n                                </Card>\n                            })\n                        }\n\n                    })()}\n                </CardGrid>\n            </Group>\n\n        }\n\n        let eventsCards = () => {\n            return this.state.events.map(event => {\n                return <Card\n                    size=\"s\"\n                    style={{ color: 'white', height: 'fit-content', background: 'linear-gradient(200.98deg, #485563 -13.11%, #29323C 75.28%)' }}\n                    key={event['rec_id']}\n                    onClick={() => go('lesson', { lessonID: event.recID, lesson: event, backTo: 'profile' })}\n                >\n                    <Div style={{ width: '110px' }} >\n                        <strong>{event['Рубрика']}</strong>\n                        <div style={{ lineHeight: '120%' }}>{event['Name']}</div>\n                        <small>\n\n                            <br />\n                            {event['Дата']}, {event['Время']} МСК\n                        </small>\n                    </Div>\n                </Card >\n            })\n\n        }\n\n\n\n\n\n        return (\n\n            <Panel id='profile'  >\n                <PanelHeader></PanelHeader>\n                <Cover height=\"184px\">\n                    <div className=\"logo\" style={{ top: (platform() === ANDROID) ? '25px' : '37px' }}>{logo}</div>\n                    <div className=\"amountContainer\">\n                        <Avatar src={user.photo_200} size={72}></Avatar>\n                        <div className=\"amountWrapper\">\n                            <span className=\"amount\">{user['Баланс']}</span>\n                            <span className=\"star\">{star('#ffffff')}</span>\n                            <br />\n                            {`${user.need_exp_to_level_up} опыта до ${+user['Уровень'] + 1} уровня`}\n                            <Progress value={(user.levelExperience * 100) / (user.next_level[\"Требует опыта\"] - user.current_level['Требует опыта'])} style={{ width: '100%' }} />\n                            {/* <a href=\"https://vk.com/@lean.school-kak-zarabotat-v-line-bally-i-zachem\" target=\"_blank\" rel=\"noopener noreferrer\">Зачем баллы?</a> */}\n                            <LevelBubble className=\"levelBubble\">{Math.round(user['Уровень'])}</LevelBubble>\n                        </div>\n                    </div>\n                </Cover>\n\n                <ProfileTabs tabs={this.state.tabs} history={this.props.history} selectedTab={this.state.selectedTab} onClickHandler={(tabName) => this.setState({ selectedTab: tabName })} />\n\n\n\n                {\n                    (() => {\n                        if (this.state.selectedTab !== 'tasks') return\n                        if (this.state.events.length === 0) return\n                        return <Group header={<Header mode=\"secondary\">Актуальное</Header>} separator='hide'>\n                            <CardScroll>\n                                {eventsCards()}\n                            </CardScroll>\n                        </Group>\n                    })()\n                }\n\n                {(() => {\n                    if (this.state.selectedTab !== 'tasks') return\n                    return cardList()\n                })()}\n\n\n                {(() => {\n\n                    if (this.state.selectedTab !== 'achieves') return\n                    return <TodoCardsList achieves={achieves} openModal={openModal} user={user} rubrics={rubrics} onButtonClick={go} />\n                })()}\n                {(() => {\n                    if (this.state.selectedTab === 'rubrics') {\n                        return <Group title=\"Рубрики\" >\n                            <List>\n                                {rubrics.map((rubric, i) => {\n                                    let cover = () => rubric['Обложка'] ? <Avatar mode=\"image\" src={rubric['Обложка'][0]['url']} size={72} /> : \"\"\n                                    return (<Cell\n                                        key={i}\n                                        before={cover()}\n                                        multiline\n                                        description={rubric['desc']}\n                                        asideContent={<Icon24BrowserForward fill=\"var(--icon_secondary)\" />}\n                                        onClick={(e) => go('rubric', rubric)}\n                                    >{rubric['Название']}</Cell>)\n                                })}\n                            </List>\n                        </Group>\n                    }\n                })()}\n\n\n                {(this.props.history.length !== 0 && this.state.selectedTab === 'history') ? <HistoryList history={this.props.history} openModal={this.props.openModal}/> : ''}\n                {snackbar}\n\n\n            </Panel>\n\n        )\n    }\n}\n\n\n\nexport default Profile","import React from 'react';\nimport { Panel, Div, FixedLayout, Button, Link, ANDROID, platform, Group, Header, Cell } from '@vkontakte/vkui';\nimport \"./LessonCard.css\";\nimport ReactMarkdown from 'react-markdown';\nimport bridge from '@vkontakte/vk-bridge';\nimport Navbar from '../Navbar/Navbar';\nimport { parseQueryString, formatLessonTime } from '../../Helpers';\nimport { iUser, iRubric, iModalData } from '../../interfaces';\nimport { AIR_CONFIG } from '../../config'\nimport Airtable from '../../Airtable';\nimport * as Typograf from 'typograf';\nimport Iframe from 'react-iframe';\nimport { iApi } from '../../Api';\nconst tp = new Typograf({ locale: ['ru', 'en-US'] });\n\nlet base = new Airtable(AIR_CONFIG)\n\n\nconst osname = platform();\n\ninterface iLessonCard {\n\tid: string\n\tlessonID: string\n\tuser: iUser\n\tonBackClick: (route: string, meta?: any) => void\n\tbackTo?: string\n\tpurchases: any[]\n\trubric?: iRubric\n\tlesson?: any\n\topenModal: (modal: { type: string, data?: iModalData }) => void\n\tapi: iApi\n}\n\n\nclass LessonCard extends React.Component<iLessonCard, any> {\n\n\t_isMounted: boolean\n\tstate = {\n\t\tmessage: null,\n\t\tlesson: null,\n\t\trubric: null,\n\t\tselectedFile: null,\n\t\thasAccess: null,\n\t\tgood: null\n\t}\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis._isMounted = false;\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.fetchData()\n\t\tif (this.state.lesson) this.checkPermissions();\n\t\t(osname === ANDROID) ? bridge.send(\"VKWebAppSetViewSettings\", { \"status_bar_style\": \"dark\", \"action_bar_color\": \"#ffffff\" }) : bridge.send(\"VKWebAppSetViewSettings\", { \"status_bar_style\": \"dark\", });\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t}\n\n\tasync fetchData() {\n\t\tthis._isMounted = true;\n\t\tlet { lesson, rubric } = this.props\n\t\t//если передан объект lesson, то используем его, если нет, то делаем фетч\n\t\tlet les = lesson ? lesson : await this.fetchLessonData();\n\t\tif (!les) return this.props.onBackClick('profile')\n\t\t//если передан объект rubric, то используем его, если нет, то делаем фетч\n\t\tlet rub = rubric ? rubric : await this.fetchRubric(les['RubricID']);\n\t\tlet good = rub['Товар'] ? await this.props.api.goods.getByID(rub['Товар'][0]) : null\n\n\t\tif (this._isMounted) this.setState({ rubric: rub, lesson: les, good: good })\n\t}\n\n\n\tasync fetchLessonData() {\n\t\tlet lesson = await this.props.api.events.getByID(this.props.lessonID)\n\t\tif (!lesson) return null\n\t\treturn formatLessonTime(lesson)\n\t}\n\n\n\tsendData = async () => {\n\t\t// let data = this.state.lesson;\n\t\tlet { rubric } = this.state\n\t\tlet { user, purchases, lesson } = this.props\n\n\t\tlet purchase;\n\n\t\tif (rubric && rubric['Товар'])\n\t\t\tpurchase = purchases.find(el => el['Рубрика'].find(rubricID => rubricID === rubric.recID))\n\n\t\tawait this.props.api.accruals.create({\n\t\t\tuser_rec_id: user.rec_id,\n\t\t\tcomment: 'Запись на тренировку',\n\t\t\tevent_rec_id: lesson.recID,\n\t\t\tamount: 0,\n\t\t\tpurchase_ids: purchase ? [purchase.recID] : []\n\t\t}).then(res => {\n\t\t\tconst queryParams = parseQueryString(window.location.search);\n\t\t\tif (queryParams && queryParams.vk_are_notifications_enabled === \"0\") bridge.send(\"VKWebAppAllowNotifications\", {});\n\t\t\tthis.setState({\n\t\t\t\tmessage: (() => {\n\t\t\t\t\tif (!res[0]) throw new Error('error when create accural')\n\t\t\t\t\treturn <div>Вы записаны <Link onClick={() => this.undo(res[0].recID)}>Отменить</Link></div>\n\t\t\t\t})()\n\t\t\t})\n\n\n\t\t}).catch(_ => this.setState({\n\t\t\tmessage: (() => {\n\t\t\t\treturn <div>Что-то сломалось. Напишите мне на <a href=\"mailto:reva@leandesign.pro\">reva@leandesign.pro</a></div>\n\t\t\t})()\n\t\t}))\n\n\t}\n\n\tundo = (recID: string) => { this.props.api.accruals.delete([recID]).then(res => this.setState({ message: null })).catch(console.log) }\n\n\n\tcheckPermissions = () => {\n\t\tlet { lesson, rubric } = this.state\n\t\tlet purchases = this.props.purchases || [];\n\t\tlet find = lesson['Участники'].find(el => +el === this.props.user['VK-ID'])\n\t\tlet res = { hasAccess: true, message: null }\n\n\t\tif (purchases.length === 0 && rubric['Товар']) res.hasAccess = false\n\t\tif (lesson['Осталось'] === 0) res.message = 'Не осталось мест'\n\t\tif (this.props.user && !lesson['Ссылка'] && find) res = { hasAccess: false, message: \"Ты в участниках\" }\n\t\tif (this.props.user && lesson['Ссылка'] && find) res = { hasAccess: false, message: '👍🏻 Работа сдана' }\n\n\t\tthis.setState(res)\n\n\t}\n\n\tfetchRubric = (rubricID: string) => base.find(rubricID, 'Рубрики')\n\t\n\n\n\trender() {\n\n\t\tlet {\n\t\t\tonBackClick,\n\t\t\tid,\n\t\t\tuser,\n\t\t\tbackTo,\n\t\t\topenModal\n\t\t} = this.props\n\n\t\tlet { lesson, rubric } = this.state\n\n\n\t\tlet renderInstruction = () => (<Iframe width=\"100%\" src={lesson.event_type['instruction']} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen />)\n\n\t\tlet renderPaymentBlock = () => {\n\t\t\tif (!this.state.good) return null\n\n\t\t\tlet good = this.state.good;\n\t\t\treturn <>\n\t\t\t\t<Header mode=\"primary\">{good['Название']}</Header>\n\t\t\t\t<Div style={{padding: '0 var(--wrapper-padding-2x) var(--wrapper-padding-2x) var(--wrapper-padding-2x)'}}>\n\t\t\t\t\t<ReactMarkdown source={good['Description']} />\n\t\t\t\t\t<Button size=\"l\" stretched={true} href={`https://app.leandesign.pro/p/pay?user_id=${user[\"VK-ID\"]}&force=true`} target=\"_blank\">Подписаться</Button>\n\t\t\t\t</Div>\n\t\t\t\t\n\t\t\t</>\n\n\t\t}\n\n\t\tlet renderInstrButton = () => {\n\t\t\treturn lesson.event_type['instruction']\n\t\t\t\t? <Button\n\t\t\t\t\tsize={'m'}\n\t\t\t\t\tstretched={true}\n\t\t\t\t\tonClick={() => openModal(!this.state.hasAccess ? { type: 'paid', data: { body: renderPaymentBlock() } } : { type: 'modal', data: { title: '', body: renderInstruction() } })}\n\t\t\t\t>\n\t\t\t\t\tИнструкция\n\t\t\t\t\t</Button> : null\n\t\t}\n\n\t\tlet renderDetails = () => {\n\t\t\tlet result = []\n\t\t\tif (lesson.event_type && lesson.event_type['Разбор'])\n\t\t\t\tresult.push(<Cell key={1} description={lesson.event_type['Разбор']}>Разбор</Cell>)\n\n\n\t\t\tif (lesson['Опыт'] && lesson['Опыт'] !== 0)\n\t\t\t\tresult.push(<Cell key={2} description={`Холодно — ${lesson['Опыт']}, Тепло — ${lesson['Опыт'] * 2}, Горячо — ${lesson['Опыт'] * 3}`} multiline={true}>Получите опыта</Cell>)\n\n\t\t\treturn result\n\t\t}\n\n\t\tif (!lesson || !user) return <div id={id}>…</div>\n\n\n\t\tlet renderBottomBar = () => {\n\t\t\tif (this.state.message) return <div>{this.state.message}</div>\n\t\t\tlet label = lesson['Ссылка'] ? 'К выполнению' : 'Я буду'\n\t\t\tif (this.state.hasAccess === false) return <Button size={'l'} onClick={() => openModal({ type: 'paid', data: { title: 'Подписка', body: renderPaymentBlock() } })} stretched={true}>{label}</Button>\n\t\t\treturn lesson['Ссылка'] ? <Button size={'l'} href={lesson['Ссылка']} target=\"_blank\" stretched={true}>{label}</Button> : <Button size={'l'} stretched={true} onClick={() => this.sendData()}>{label}</Button>\n\t\t}\n\n\t\tlet renderDetailsBlock = () => {\n\t\t\tlet details = renderDetails();\n\t\t\tif (details.length === 0) return\n\t\t\treturn <Group separator=\"hide\" style={{ backgroundColor: \"var(--color-gray)\", paddingBottom: '80px' }}>\n\t\t\t\t<Header mode=\"secondary\">Детали</Header>\n\t\t\t\t{details}\n\t\t\t</Group>\n\t\t}\n\n\t\tlet description = lesson.event_type['Описание'] ? lesson.event_type['Описание'] : lesson['Описание']\n\n\t\treturn (\n\n\t\t\t<Panel id={id}>\n\t\t\t\t<Navbar go={() => onBackClick(backTo ? backTo : 'rubric', rubric)} buttonColor=\"black\"></Navbar>\n\n\t\t\t\t<Group separator=\"hide\">\n\t\t\t\t\t<Div>\n\t\t\t\t\t\t<ReactMarkdown source={tp.execute(description)} />\n\t\t\t\t\t\t{renderInstrButton()}\n\t\t\t\t\t</Div>\n\t\t\t\t</Group>\n\n\t\t\t\t{renderDetailsBlock()}\n\n\t\t\t\t<FixedLayout vertical=\"bottom\" className=\"bottomBar\" >{renderBottomBar()}</FixedLayout>\n\t\t\t</Panel>\n\n\t\t);\n\t}\n}\n\n\n\nexport default LessonCard;","//поля помеченные = null берутся из airtable. Остальные появлятся в коде.\nimport { iLevel } from './Api'\n\nexport class iUser {\n\tid: number\n\tfirst_name: string\n\tlast_name: string\n\tlevelExperience?: number\n\t'Имя': string = null\n\t'VK-ID': number = null\n\t'Баланс': number = null\n\t'Опыт': number = null\n\t'Уровень': number = null\n\t'Email'?: string = null\n\t'visited_events': string[] = null\n\trecID: string\n\trec_id?: string\n\tphoto_200?: string\n\tnext_level?: iLevel\n\tcurrent_level?: iLevel\n\tneed_exp_to_level_up?: number\n}\n\nexport interface iModalData {\n\ttitle?: string\n\tdesc?: string\n\tonButtonClickHandler?: () => void\n\tbuttonLabel?: string\n\tbody?: any\n}\n\n\nexport class iAchieve {\n\trecID: string\n\t'Кол-во работ': number = null\n\t'RubricID': string = null\n\t'Name': string = null\n\t'Описание': string = null\n\t'Оценка': number = null\n\t'Таблица': string = null\n\t'Короткое описание': string = null\n\t'Опубликовано': boolean = null\n\tachievedItems?: any[]\n\tacivedItem?: any\n}\n\nexport class iRubric {\n\trecID: string;\n\tdesc: string;\n\t'Название': string = null;\n\t'Таблица': string = null;\n\t'Обложка': any[] = null;\n\t'Описание': string = null;\n\t'Итог опыт': number = null;\n\t'Тренировки': string[] = null;\n}\n\n\nexport class iHistoryItem {\n\trecID: string\n\t'VK-ID': number = null\n\t'Датавремя': string = null\n\t'Профиль'?: string[] = null\n\t'Рубрика': string[] = null\n\t'Комментарий': string = null\n\t'Баллы': number = null\n\t'Средняя': number = null\n\t'Макет': any[] = null\n\t'Опыт': number = null\n}","import React from 'react'\nimport { ModalCard } from '@vkontakte/vkui'\nimport { iModalData } from '../interfaces'\n\ninterface iModalCardComponent {\n    id: string\n    onClose: (foo: any) => void\n    modalData: iModalData\n}\n\nexport default class ModalCardComponent extends React.Component<iModalCardComponent, any> {\n    render() {\n        let {modalData} = this.props\n        return <ModalCard\n            id={this.props.id}\n            onClose={() => this.props.onClose(null)}\n            header={modalData ? modalData.title : ''}\n            caption={modalData ? modalData.desc : ''}\n            actions={modalData && modalData.onButtonClickHandler ? [{\n                title: modalData ? modalData.buttonLabel : '',\n                mode: 'primary', action: () => { \n                    this.props.onClose(null)\n                     return modalData ? modalData.onButtonClickHandler() : null\n                }\n            }] : []}\n        >\n            {modalData ? modalData.body : ''}\n        </ModalCard>\n    }\n}","import { AirtableConnector, iAirtableListOptions } from './Airtable';\n// import * as admin from 'firebase-admin';\n\n\n// Events //\n\nexport interface iEventType {\n    level?: number,\n    isAvailableToUser?: (user: any) => boolean\n}\n\nexport interface iEventFileds {\n    event_type_id?: string\n}\n\nexport interface iEvent extends iEventFileds {\n    isAvailableToUser?: (user: any) => boolean\n}\n\nexport interface iEventCreate {\n    title?: string\n}\n\nexport interface iEventUpdate {\n    title?: string\n}\n\ntype eventFields = 'Name' | 'Уровень' | 'Тренировки' | 'Описание' | 'Рубрика' | 'День' | 'Опубликовано' | 'RubricID' | 'Опыт рубрики' | 'Навыки' | 'key' | 'Skills' | 'Уровень' | 'level_no' | 'recID'\n\ninterface iEventListOptions extends iAirtableListOptions {\n    fields?: eventFields[]\n}\n\nclass EventTypes {\n    private listName = 'Тип тренировки';\n\n    constructor(private base: AirtableConnector) { }\n\n    list = async (params?: iEventListOptions): Promise<EventType[]> => this.base.list(this.listName, params)\n        .then(res => res.map(el => new EventType(el)))\n\n    getByID = async (id: string): Promise<EventType> => this.base.getByID(id, this.listName)\n    // create = async (data: iEventCreate[]) => this.base.create(data).then(res => res.map(el => new Event(el)))\n    // update = async (data: iEventUpdate[]) => this.base.update(data).then(res => res.map(el => new Event(el)))\n};\n\n// class Users {\n//     private listName = 'Участники';\n//     constructor(private base: AirtableConnector, firebase: FBConnector) { }\n//     list = async (filter?: iEventFileds): Promise<EventType[]> => this.base.list(this.listName, { filter: filter })\n//         .then(res => res.map(el => new EventType(el)))\n// }\n\n\n\n\nclass Events {\n    private listName = 'Тренировки';\n    constructor(private base: AirtableConnector) { }\n\n    list = async (params?: iAirtableListOptions, include_event_type?: boolean): Promise<Event[]> => this.base.list(this.listName, params).then(res => {\n        if (!include_event_type) return res\n\n        let proms = res.map(el => new EventTypes(this.base).getByID(el.event_type_id).then(event_type => {\n            el.event_type = new EventType(event_type)\n            return el\n        }))\n        return Promise.all(proms).then(res => res.map(el => new Event(el)))\n    })\n\n    getByID = async (id: string): Promise<Event> => this.base.getByID(id, this.listName)\n};\n\ntype iLevelFields = 'Number'\n    | 'Требует опыта'\n    | 'Товары'\n    | 'Тип тренировки'\n    | 'Навыки'\n    | 'recID'\n\ninterface iLevelListOption extends iAirtableListOptions {\n    fields?: iLevelFields[]\n}\n\nclass Levels {\n    private listName = 'Уровни дизайнера';\n    constructor(private base: AirtableConnector) { }\n    list = async (params?: iLevelListOption): Promise<Level[]> => this.base.list(this.listName, params)\n        .then(res => res.map(el => new Level(el)))\n}\n\ntype iGoodsFields = 'Название'\n    | 'Баллы'\n    | 'Стоимость'\n    | 'Для подписчиков'\n    | 'Опубликовано'\n    | 'Description'\n    | 'Обложка'\n    | 'Кол-во тренировок'\n    | 'Рубрики'\n    | 'Покупки'\n    | 'Срок годности'\n    | 'RecID'\n    | 'Уровни дизайнера'\n\n\nexport interface iGoodsListOption extends iAirtableListOptions {\n    fields?: iGoodsFields[]\n}\n\n\ntype iUsersFields = 'Имя'\n    | 'VK Profile'\n    | 'VK-ID'\n    | 'Опыт'\n    | 'Покупки'\n    | 'Начисления: разминки'\n    | 'recID'\n    | 'Активные покупки'\n    | 'Баланс'\n    | 'Уровень'\n    | 'visited_events'\n\n\nexport interface iUsersListOption extends iAirtableListOptions {\n    fields?: iUsersFields[]\n}\n\nclass Goods {\n    private listName = 'Товары';\n    constructor(private base: AirtableConnector) { }\n    list = async (params?: iGoodsListOption): Promise<Good[]> => {\n        if (params && !params.view) params.view = 'Line_App.Active'\n        if (!params) params = { view: 'Line_App.Active' }\n        return this.base.list(this.listName, params).then(res => res.map(el => new Good(el)))\n    }\n\n    getByID = async (id: string): Promise<Goods> => this.base.getByID(id, this.listName)\n\n}\n\n\nclass User {\n    'Имя': any\n    'VK Profile': any\n    'VK-ID': any\n    'Опыт': any\n    'Покупки': any\n    'Начисления: разминки': any\n    'recID': any\n    'Активные покупки': any\n    'Баланс': any\n    'Уровень': any\n    'visited_events': any\n\n    constructor(data: any) {\n        if (data) Object.keys(data).map(key => this[key] = data[key])\n    }\n}\n\n\ninterface iInitUser {\n    'vk_id': number\n    'name'?: string\n}\n\ninterface iUserCreateOptions {\n    'vk_id': number\n    'name'?: string\n    'email'?: string\n}\n\nclass Users {\n    private listName = 'Участники';\n    constructor(private base: AirtableConnector) { }\n\n    initUser(data: iInitUser): Promise<User | undefined> {\n        return this.getByID({ vk_id: data.vk_id }).then(res => {\n            if (res) return res\n            if (!res) return this.create(data).then(resp => new User(resp))\n                .then(async user => {\n                    await new Accruals(this.base).create({\n                        amount: 1,\n                        user_rec_id: user.recID,\n                        comment: 'Первое начисление'\n                    })\n                    return user\n                })\n            return\n        })\n    }\n\n    create(params: iUserCreateOptions): Promise<User | undefined> {\n        return this.base.create([{\n            fields: {\n                'Имя': params.name || '',\n                'VK-ID': params.vk_id,\n                'Email': params.email || ''\n            }\n        }], this.listName).then(resp => new User(resp))\n    }\n\n    getByID(params: { vk_id?: number, rec_id?: string }): Promise<User | undefined> {\n        if (!params.vk_id && !params.rec_id) throw new Error('vk_id or rec_id needed')\n        let proms = params.rec_id ? this.base.getByID(params.rec_id, this.listName) : this.base.list(this.listName, {\n            filter: { 'VK-ID': `=${params.vk_id}` }\n        }).then(res=>res[0])\n        return proms.then((res: any) => {\n            if (res) return new User(res)\n            return\n        })\n    }\n    list = async (params?: iUsersListOption): Promise<User[]> => {\n        return this.base.list(this.listName, params).then(res => res.map(el => new User(el)))\n    }\n\n}\n\n\nclass Accrual {\n    'Имя': any\n    'Датавремя': any\n    'Опыт': any\n    'Профиль': any\n    'Баллы': any\n    'VK-ID': any\n    'Рубрика': any\n    'Ачивка': any\n    'Комментарий': any\n    'Ссылка на пост': any\n    'Опыт рубрики': any\n    'Оценка': any\n    'Макет': any\n    'Покупки': any\n    'Тренировка': any\n    'День': any\n    'Спринт': any\n    'Сезон': any\n    'RubricID': any\n    'Коэффициент повышения опыта': any\n    'ID тренировки': any\n    'Тип тренировки': any\n    'Оценки': any\n    'Средняя': any\n    'recID': any\n    'event_type_id': any\n\n\n    constructor(data: any) {\n        if (data) Object.keys(data).map(key => this[key] = data[key])\n    }\n}\n\ntype iAccrualsFields = 'Имя' |\n    'Датавремя' |\n    'Опыт' |\n    'Профиль' |\n    'Баллы' |\n    'VK-ID' |\n    'Рубрика' |\n    'Ачивка' |\n    'Комментарий' |\n    'Ссылка на пост' |\n    'Опыт рубрики' |\n    'Оценка' |\n    'Макет' |\n    'Покупки' |\n    'Тренировка' |\n    'День' |\n    'Спринт' |\n    'Сезон' |\n    'RubricID' |\n    'Коэффициент повышения опыта' |\n    'ID тренировки' |\n    'Тип тренировки' |\n    'Оценки' |\n    'Средняя' |\n    'event_type_id';\n\n\nexport interface iAccrualsListOptions {\n    user_rec_id?: string\n    vk_id?: number\n    last_month?: boolean\n    max_records?: number\n}\n\ninterface iAccrualCreateOptions {\n    user_rec_id: string\n    comment?: string\n    amount: number\n    file_urls?: string[]\n    event_rec_id?: string\n    purchase_ids?: string[]\n}\n\nclass Accruals {\n    private listName = 'Начисления: разминки';\n    constructor(private base: AirtableConnector) { }\n\n    getByID = (rec_id: string): Promise<Accrual | undefined> => this.base.getByID(rec_id, this.listName).then(res => new Accrual(res))\n\n    list = async (params?: iAccrualsListOptions): Promise<Accrual[]> => {\n        let opt: iAirtableListOptions = { sort: [{ field: 'Датавремя', direction: 'desc' }] }\n        if (params && params.max_records) opt.maxRecords = params.max_records\n        if (params && params.vk_id) opt.filter = { 'VK-ID': `=${params.vk_id}` }\n        if (params && params.last_month) opt.view = 'Последний месяц'\n        if (params && params.user_rec_id) opt.filter = { 'user_rec_id': `=${params.user_rec_id}` }\n        return this.base.list(this.listName, opt).then(res => res.map(el => new Accrual(el)))\n    }\n\n    create = async (params: iAccrualCreateOptions): Promise<Accrual[]> => {\n        return this.base.create([{\n            fields: {\n                'Датавремя': new Date().toISOString(),\n                'Баллы': params.amount,\n                'Макет': params.file_urls ? params.file_urls : [],\n                'Тренировка': params.event_rec_id ? [params.event_rec_id] : [],\n                'Профиль': [params.user_rec_id],\n                'Комментарий': params.comment ? params.comment : '',\n                'Покупки': params.purchase_ids ? params.purchase_ids : []\n            }\n        }], this.listName)\n    }\n\n    delete = async (rec_ids: string[]) => this.base.delete(rec_ids, this.listName)\n\n}\n\n\nclass Good {\n    'Название': any\n    'Баллы': any\n    'Стоимость': any\n    'Для подписчиков': any\n    'Опубликовано': any\n    'Description': any\n    'Обложка': any\n    'Кол-во тренировок': any\n    'Рубрики': any\n    'Покупки': any\n    'Срок годности': any\n    'RecID': any\n    'Уровни дизайнера': any\n\n    constructor(data: any) {\n        if (data) Object.keys(data).map(key => this[key] = data[key])\n    }\n}\n\nexport interface iLevel {\n    'Number'?: any\n    'Требует опыта'?: any\n    'Товары'?: any\n    'Тип тренировки'?: any\n    'Навыки'?: any\n    'recID'?: any\n}\n\nclass Level implements iLevel {\n    'Number': any\n    'Требует опыта': any\n    'Товары': any\n    'Тип тренировки': any\n    'Навыки': any\n    'recID': any\n    constructor(data: iLevel) {\n        if (data) Object.keys(data).map(key => this[key] = data[key])\n    }\n}\n\n\n\nclass EventType {\n    'level_no': any\n    'Уровень': any\n    'Name': any\n    'Тренировки': any\n    'Описание': any\n    'Рубрика': any\n    'День': any\n    'Опубликовано': any\n    'RubricID': any\n    'Опыт рубрики': any\n    'Навыки': any\n    'key': any\n    'Статус': any\n    'Skills': any\n    'recID': any\n    event_type_id?: string\n    constructor(data: iEventType) {\n        if (data) Object.keys(data).map(key => this[key] = data[key])\n    }\n    isAvailableToUser = (user: any) => user.level >= this.level_no\n}\n\nclass Event implements iEvent {\n    constructor(data: iEventType) {\n        if (data) Object.keys(data).map(key => this[key] = data[key])\n    }\n\n    // isAvailableToUser = (user: any) => user.level >= this.level\n}\n\n\ninterface iApiConfig {\n    airtable_conf: { apikey: string, base: string },\n    firebase_service_account?: any\n}\n\nexport interface iApi {\n    event_types: EventTypes\n    events: Events\n    levels: Levels\n    goods: Goods\n    users: Users\n    accruals: Accruals\n}\n\nexport default class Api {\n\n    constructor(private params: iApiConfig) { }\n\n    event_types = new EventTypes(new AirtableConnector(this.params.airtable_conf))\n    events = new Events(new AirtableConnector(this.params.airtable_conf))\n    levels = new Levels(new AirtableConnector(this.params.airtable_conf))\n    goods = new Goods(new AirtableConnector(this.params.airtable_conf))\n    users = new Users(new AirtableConnector(this.params.airtable_conf))\n    accruals = new Accruals(new AirtableConnector(this.params.airtable_conf))\n}\n\n\n// export class FBConnector {\n\n// \tprotected db\n\n// \tconstructor(serviceAccount: any) {\n\n//         admin.initializeApp({\n//             credential: admin.credential.cert(serviceAccount)\n//         });\n\n//         this.db = admin.firestore();\n// \t}\n\n// \tgetByID(rec_id: string, listName: string): Promise<any> {\n// \t\treturn this.db.collection(listName).doc(rec_id).get()\n// \t\t\t.then((doc) => {\n// \t\t\t\tif (!doc.exists) {\n// \t\t\t\t\tconsole.log('No such document!');\n// \t\t\t\t} else {\n// \t\t\t\t\treturn doc.data()\n// \t\t\t\t}\n// \t\t\t})\n// \t\t\t.catch((err) => {\n// \t\t\t\tconsole.log('Error getting documents', err);\n// \t\t\t});\n// \t}\n\n// \tget(listName: string, filter?: any) {\n// \t\tlet filt = filter ? this.generateFilterString(filter) : null\n// \t\tlet request = filt ? this.db.collection(listName).where(filt.key, filt.condition, filt.value) : this.db.collection(listName)\n\n// \t\treturn request.get().then(snapshot => {\n// \t\t\tif (snapshot.empty) {\n// \t\t\t\tconsole.log('No matching documents.');\n// \t\t\t\treturn [];\n// \t\t\t}\n// \t\t\tlet data: any[] = []\n\n// \t\t\tsnapshot.forEach(doc => {\n// \t\t\t\tlet obj = doc.data();\n// \t\t\t\tobj.id = doc.id\n// \t\t\t\tdata.push(obj)\n// \t\t\t});\n// \t\t\treturn data\n// \t\t})\n// \t}\n\n// \tcreate(dataArray: [{ id?: string, fields: any }], listName: string): Promise<any> {\n// \t\tlet proms = dataArray.map(data => data.id ? this.db.collection(listName).doc(data.id).set(data.fields) : this.db.collection(listName).add(data.fields))\n\n// \t\treturn Promise.all(proms)\n// \t}\n\n// \tasync update(params: { id: string, fields: any }[], listName: string) {\n\n// \t\t// var result = [];\n// \t\t// var arrays = [],\n// \t\t\t// size = 10\n\n// \t\t// while (params.length > 0) arrays.push(params.splice(0, size))\n// \t\t// for (const bunch of arrays) {\n// \t\t\tlet proms = params.map(field => this.db.collection(listName).doc(field.id).update(field.fields))\n// \t\t\t// await \n// \t\t\t// await setTimeout(() => { }, 2000)\n// \t\t// }\n// \t\treturn Promise.all(proms)\n// \t}\n\n// \tprotected generateFilterString = (fileds: any): { key: string, value: any, condition: string } => {\n\n// \t\tlet keys = Object.keys(fileds)\n\n// \t\tlet arr: any[] = []\n// \t\tkeys.map(key => {\n// \t\t\tlet reg = /^([><=!]*)(.*)/gs\n// \t\t\tlet value = fileds[key].replace(reg, '$2');\n// \t\t\tlet condition = fileds[key].replace(reg, '$1')\n// \t\t\tarr.push({\n// \t\t\t\tkey: key,\n// \t\t\t\tvalue: value,\n// \t\t\t\tcondition: condition\n// \t\t\t})\n// \t\t})\n\n// \t\treturn arr[0]\n// \t}\n// }","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { platform, ANDROID, View, ModalRoot, ModalPage, ModalPageHeader, PanelHeaderButton } from '@vkontakte/vkui';\nimport * as Typograf from 'typograf';\nimport { air_schema } from 'lean-air';\nimport splash from './img/splash.GIF';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport \"./main.css\";\nimport Rubric from './components/Rubric/Rubric';\nimport Profile from './components/Profile/Profile';\nimport LessonCard from './components/LessonCard/LessonCard';\nimport { iModalData, iUser, iRubric, iAchieve } from './interfaces';\nimport ModalCardComponent from './components/ModalCardComponent';\nimport { parseQueryString } from './Helpers';\nimport Airtable from './Airtable'\nimport { AIR_CONFIG } from './config'\nimport Api from './Api'\nimport { iGoodsListOption } from './Api'\n\n\nlet base = new Airtable(AIR_CONFIG)\nlet api = new Api({ airtable_conf: AIR_CONFIG })\n\nconst tp = new Typograf({ locale: ['ru', 'en-US'] });\n\nconst splashLoader = <div style={{ width: '100%', height: '100%', backgroundColor: '#770EFD' }}><img src={splash} style={{ width: '100%', height: '100%' }} alt=\"loading...\" /></div>;\n\nconst osname = platform();\n\n\ninterface iAppState {\n\tuser: iUser\n\tactiveView: string\n\tactiveModal: string\n\tmodalData: iModalData\n\tauthToken: string\n\tisLoading: boolean\n\thistory: any[]\n\trubrics: iRubric[]\n\tmeta: any\n\tsnackbar: any\n\tpurchases: any[]\n\tachieves: any[]\n\tevents: any[]\n}\n\nclass App extends React.Component<any, iAppState> {\n\n\t_isMounted: boolean\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tuser: null,\n\t\t\tactiveView: null,\n\t\t\tactiveModal: null,\n\t\t\tmodalData: null,\n\t\t\tauthToken: null,\n\t\t\tisLoading: false,\n\t\t\thistory: [],\n\t\t\trubrics: [],\n\t\t\tmeta: {},\n\t\t\tsnackbar: null,\n\t\t\tpurchases: null,\n\t\t\tachieves: null,\n\t\t\tevents: null\n\t\t};\n\n\t\tthis.setActiveModal = this.setActiveModal.bind(this);\n\t\tthis._isMounted = false\n\t}\n\n\n\n\tsetActiveModal(modal: { type: string, data?: iModalData }) {\n\t\tlet activeModal = modal ? modal.type : null\n\t\tlet modalData = modal ? modal.data : null\n\t\tthis.setState({\n\t\t\tactiveModal,\n\t\t\tmodalData\n\t\t})\n\t}\n\n\n\n\tasync componentDidMount() {\n\n\n\n\t\tthis.setState({ isLoading: true })\n\n\t\tbridge.subscribe(async (e: any) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tawait this.fetchData(e).catch(console.error)\n\t\t\t\t\tconst hashParams = parseQueryString(window.location.hash);\n\n\t\t\t\t\tif (hashParams.r === 'lesson' && hashParams.id)\n\t\t\t\t\t\tthis.setState({ activeView: 'lesson', meta: { lessonID: hashParams.id }, isLoading: false })\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.setState({ activeView: 'profile', isLoading: false })\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VKWebAppAccessTokenReceived':\n\t\t\t\t\tthis.setState({ authToken: e.detail.data.access_token });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VKWebAppViewRestore':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VKWebAppAllowNotificationsResult':\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\n\t\t\t}\n\t\t});\n\n\t\t(osname === ANDROID) ? bridge.send(\"VKWebAppSetViewSettings\", { \"status_bar_style\": \"light\", \"action_bar_color\": \"#000000\" }) : bridge.send(\"VKWebAppSetViewSettings\", { \"status_bar_style\": \"light\", });\n\t\tbridge.send('VKWebAppGetUserInfo', {});\n\n\t}\n\n\n\tasync fetchData(e) {\n\t\tthis._isMounted = true;\n\t\tlet userData = await this.fetchUserData(e.detail.data);\n\t\tif (!userData) return\n\n\t\tlet rubrics = await this.fetchRubricsData()\n\t\tlet history = await this.fetchHistoryData(e.detail.data.id)\n\t\tlet purchases = await this.fetchUserPurchases(userData[air_schema.f_users.vk_id]);\n\t\tlet achieves = await this.fetchAchieves() as any[];\n\t\tlet events = await this.fetchEventsByUser(userData)\n\n\n\t\tawait api.levels.list({\n\t\t\tfilterByFormula: `OR({Number}=${userData['Уровень'] + 1}, {Number}=${userData['Уровень']})`\n\t\t}).then(res => {\n\t\t\tuserData.next_level = res.find(el => el.Number === userData['Уровень'] + 1)\n\t\t\tuserData.current_level = res.find(el => el.Number === userData['Уровень'])\n\t\t\tlet need_level_exp = userData.next_level[\"Требует опыта\"] - userData.current_level['Требует опыта']\n\t\t\tlet user_level_exp = userData['Опыт'] - userData.current_level['Требует опыта']\n\t\t\tuserData.need_exp_to_level_up = need_level_exp;\n\t\t\tuserData.levelExperience = user_level_exp\n\t\t\treturn\n\t\t})\n\n\t\tif (this._isMounted) {\n\t\t\tthis.setState({\n\t\t\t\tevents: events,\n\t\t\t\trubrics: rubrics,\n\t\t\t\thistory: history,\n\t\t\t\tpurchases: purchases,\n\t\t\t\tuser: Object.assign(e.detail.data, userData),\n\t\t\t\tachieves: achieves\n\t\t\t})\n\t\t}\n\n\t}\n\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t}\n\n\n\tfetchUserData = (user: iUser): Promise<any> => api.users.initUser({\n\t\tvk_id: user.id, name: `${user.first_name} ${user.last_name}`,\n\t})\n\n\n\n\n\tasync fetchUserPurchases(userID: number): Promise<any> {\n\t\treturn base.list(air_schema.t_purchases, { filterByFormula: `AND({${air_schema.f_purchases.vk_id}}=${userID}, NOT({${air_schema.f_purchases.status}}=\"Архив\"))` })\n\t}\n\n\n\n\tasync fetchRubricsData(): Promise<iRubric[]> {\n\t\tlet fields = new iRubric();\n\n\t\tlet rubrics = await base.list('Рубрики', {\n\t\t\tfilterByFormula: '{Опубликовано} = TRUE()',\n\t\t\tfields: Object.keys(fields).filter(key => fields[key] !== undefined)\n\n\t\t}).catch(e => []) as iRubric[]\n\n\t\treturn rubrics.map((obj: iRubric) => {\n\t\t\tif (obj['Описание']) {\n\t\t\t\tobj['Описание'] = tp.execute(obj['Описание']);\n\t\t\t\tobj.desc = obj['Описание'].replace(/[*#|]/gs, '').slice(0, 60)\n\t\t\t\tif (obj.desc.length < obj['Описание'].length) obj.desc = obj.desc + \"…\"\n\t\t\t}\n\n\t\t\treturn obj\n\t\t}) as iRubric[];\n\n\t}\n\n\n\tfetchAchieves() {\n\t\tlet fields = new iAchieve();\n\t\treturn base.list('Ачивки', {\n\t\t\tsort: [{ field: 'Кол-во работ', direction: 'asc' }, { field: 'Сложность', direction: 'asc' }],\n\t\t\tfilterByFormula: 'NOT({Опубликовано}=BLANK())',\n\t\t\tfields: Object.keys(fields).filter(key => fields[key] !== undefined)\n\t\t}).catch(e => [])\n\t}\n\n\tasync fetchHistoryData(user_id: any) {\n\t\treturn api.accruals.list({\n\t\t\t'last_month': true,\n\t\t\tmax_records: 10,\n\t\t\tvk_id: user_id,\n\t\t})\n\t}\n\n\tasync fetchEventsByUser(user: iUser) {\n\t\tlet filter = user.visited_events.map(el => `NOT({recID}=\"${el}\")`).join(',')\n\t\treturn api.events.list({\n\t\t\tfilterByFormula: `AND(${filter})`,\n\t\t\tview: 'На главной в Линии',\n\t\t\tmaxRecords: 5\n\t\t}, true)\n\n\t}\n\n\tsetLocation = (route: string) => {\n\t\tif (route !== 'profile') {\n\t\t\tbridge.send('VKWebAppSetLocation', { location: route });\n\t\t} else {\n\t\t\tbridge.send('VKWebAppSetLocation', { location: '' });\n\t\t}\n\t}\n\n\n\tgo = (route: string, meta?: any) => {\n\t\tif (meta) this.setState({ meta: meta })\n\t\tthis.setState({ activeView: route })\n\t\treturn\n\t};\n\n\tonRubricCellClickHandler = (route: string, meta: any) => {\n\t\tthis.setState({ activeView: route })\n\t\tthis.setState({ meta: meta })\n\t}\n\n\tfetchLessons = async () =>  api.events.list({ view: 'Ближайшие', filterByFormula: `NOT({Дата}=BLANK())` }, true)\n\tfetchGoods = async (params?: iGoodsListOption) => api.goods.list(params)\n\t\n\n\n\trender() {\n\n\t\tconst {\n\t\t\tuser,\n\t\t\tisLoading,\n\t\t\thistory,\n\t\t\trubrics,\n\t\t\tachieves,\n\t\t\tpurchases,\n\t\t\tmeta\n\t\t} = this.state;\n\n\t\tif (!user || isLoading) return splashLoader;\n\n\n\n\t\tconst modal =\n\t\t\t(<ModalRoot\n\t\t\t\tactiveModal={this.state.activeModal}\n\t\t\t\tonClose={() => this.setState({ activeModal: null })}\n\t\t\t>\n\n\t\t\t\t<ModalCardComponent\n\t\t\t\t\tid='modal'\n\t\t\t\t\tonClose={() => this.setActiveModal(null)}\n\t\t\t\t\tmodalData={this.state.modalData} />\n\n\t\t\t\t<ModalPage\n\t\t\t\t\tid='paid'\n\t\t\t\t\tonClose={() => this.setActiveModal(null)}\n\t\t\t\t\theader={\n\t\t\t\t\t\t<ModalPageHeader\n\t\t\t\t\t\t\t// left={<PanelHeaderButton onClick={() => this.setActiveModal(null)}>×</PanelHeaderButton>}\n\t\t\t\t\t\t\tright={<PanelHeaderButton onClick={() => this.setActiveModal(null)}>Закрыть</PanelHeaderButton>}\n\t\t\t\t\t\t></ModalPageHeader>\n\t\t\t\t\t}\n\t\t\t\t\tsettlingHeight={100}\n\t\t\t\t>\n\t\t\t\t\t{this.state.modalData ? this.state.modalData.body : null}\n\n\t\t\t\t</ModalPage>\n\t\t\t</ModalRoot>)\n\n\t\treturn (\n\t\t\t<View id=\"main\" activePanel={this.state.activeView} modal={modal}>\n\t\t\t\t<Profile\n\t\t\t\t\tid=\"profile\"\n\t\t\t\t\tsnackbar={this.state.snackbar}\n\t\t\t\t\trubrics={rubrics}\n\t\t\t\t\tgo={this.go}\n\t\t\t\t\tuser={user}\n\t\t\t\t\thistory={history}\n\t\t\t\t\tachieves={achieves}\n\t\t\t\t\topenModal={(modal) => this.setActiveModal(modal)}\n\t\t\t\t\tevents={this.state.events}\n\t\t\t\t\tgetEvents={this.fetchLessons}\n\t\t\t\t\tapi={api}\n\t\t\t\t/>\n\t\t\t\t<Rubric\n\t\t\t\t\tid='rubric'\n\t\t\t\t\tuser={user}\n\t\t\t\t\trubric={meta}\n\t\t\t\t\tgo={this.go}\n\t\t\t\t\trubricCellClickHandler={this.go}\n\t\t\t\t\tgetLessons={this.fetchLessons}\n\t\t\t\t/>\n\t\t\t\t<LessonCard\n\t\t\t\t\tid=\"lesson\"\n\t\t\t\t\tonBackClick={this.go}\n\t\t\t\t\tlessonID={meta.lessonID}\n\t\t\t\t\tlesson={meta.lesson}\n\t\t\t\t\tuser={user}\n\t\t\t\t\tpurchases={purchases}\n\t\t\t\t\tbackTo={meta.backTo}\n\t\t\t\t\topenModal={(modal) => this.setActiveModal(modal)}\n\t\t\t\t\tapi={api}\n\t\t\t\t/>\n\t\t\t</View >\n\t\t)\n\t}\n}\n\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport bridge from '@vkontakte/vk-bridge';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit');\n\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}