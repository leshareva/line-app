{"version":3,"sources":["img/splash.GIF","components/Cover/Cover.tsx","components/Navbar/Navbar.tsx","components/Rubric/RubricTabs.tsx","components/Rubric/ScheduleListItem.tsx","components/Rubric/ScheduleList.tsx","icons.tsx","components/HistoryList.tsx","config.ts","Airtable.ts","Helpers.ts","components/Rubric/Rubric.tsx","components/Profile/LevelBubble/LevelBubble.tsx","components/Profile/ProfileTabs.tsx","components/Profile/ToDoCardList.tsx","components/Profile/Profile.tsx","components/LessonCard/LessonCard.tsx","components/ProgressSnackbar/ProgressSnackBar.tsx","interfaces.tsx","components/ModalCardComponent.tsx","Api.ts","App.tsx","constants.tsx","index.tsx"],"names":["module","exports","Cover","this","props","background","height","className","style","minHeight","children","React","Component","Navar","go","dataTo","meta","buttonColor","osname","platform","IOS","marginTop","left","onClick","data-to","data-meta","color","RubricTabs","rubric","history","onClickHandler","selectedTab","lessons","selected","length","ScheduleListItem","lesson","onCellClick","expandable","multiline","lessonID","recID","before","description","substring","ScheduleList","state","isLoading","Object","keys","map","key","i","les","header","replace","index","star","fill","width","viewBox","xmlns","d","logo","fillRule","clipRule","HistoryList","parseDate","iso","date","Date","month","getMonth","getDate","getFullYear","toLocaleTimeString","parseHistory","filter","el","asideContent","mode","AIR_CONFIG","apikey","base","tLOGS","tUSERS","AirtableConnector","config","air","list","listname","options","a","filterByFormula","generateFilterstring","getByID","id","find","create","data","Promise","resolve","title","update","fileds","arr","reg","value","condition","isNaN","push","join","Airtable","endpointUrl","apiKey","listName","reject","cells","select","eachPage","records","fetchNextPage","forEach","fields","rec_id","err","console","error","record","params","arrays","splice","bunch","setTimeout","field","delete","rec_ids","destroy","Air","parseQueryString","string","slice","split","queryParam","kvp","reduce","query","Time","setHours","getHours","toTimeString","formatLessonTime","0","1","2","3","4","5","6","getDay","Rubric","_isMounted","purchases","activeTab","goods","getPurchases","user","catch","log","res","pursh","renderAbonement","good","size","getLessons","setState","fetchHistoryData","userID","rubricID","rubricTable","then","item","e","obj","days","day","items","currentTarget","dataset","tabName","exp","current","next","Math","round","paddingLeft","source","LevelBubble","action","ProfileTabs","tabs","TodoCardsList","achieves","proms","achieve","fetchRubricHistory","userHistory","achievedItems","acivedItem","all","result","RubricID","openModal","rubrics","onButtonClick","achive","type","desc","onButtonClickHandler","buttonLabel","backgroundColor","textDecoration","separator","marginBottom","Profile","events","getEvents","snackbar","top","ANDROID","src","photo_200","need_exp_to_level_up","levelExperience","next_level","current_level","event","backTo","lineHeight","marginLeft","event_type","removeMd","tp","Typograf","locale","LessonCard","message","selectedFile","hasAccess","sendData","purchase","opt","toISOString","queryParams","window","location","search","vk_are_notifications_enabled","bridge","send","undo","_","href","checkPermissions","fetchRubric","fetchLessonData","onBackClick","rub","execute","stretched","body","frameBorder","allow","allowfullscreen","details","getDetails","paddingBottom","vertical","target","ProgressSnackBar","count","layout","onClose","rel","iUser","first_name","last_name","iAchieve","iRubric","iHistoryItem","ModalCardComponent","modalData","caption","actions","EventTypes","EventType","Events","include_event_type","event_type_id","Event","Levels","Level","isAvailableToUser","level","level_no","api","event_types","airtable_conf","levels","splashLoader","splash","alt","App","setLocation","route","activeView","onRubricCellClickHandler","fetchLessons","view","activeModal","authToken","openSnackbar","bind","setActiveModal","modal","subscribe","detail","fetchRubricsData","fetchUserData","userData","fetchUserPurchases","air_schema","f_users","vk_id","fetchAchieves","fetchEventsByUser","Number","need_level_exp","user_level_exp","assign","hashParams","hash","r","access_token","t_users","undefined","name","f_history","points","comment","t_history","t_purchases","f_purchases","status","sort","direction","maxRecords","concat","visited_events","percent","right","settlingHeight","url","activePanel","rubricCellClickHandler","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50a9c0b8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/splash.75e96a0e.GIF\";","import React from 'react';\nimport { Div } from '@vkontakte/vkui'\nimport './Cover.css'\n\nexport default class Cover extends React.Component<any, any> {\n\n\n    render() {\n\n        const {\n            background,\n            height\n        } = this.props\n        return (\n            <Div className=\"cover\" style={{ height: height ? height : '38vh', minHeight: '38vh', background: background ? background : 'linear-gradient(200.98deg, #485563 -13.11%, #29323C 75.28%)' }}>\n                {/* {(() => content)()} */}\n                <div className=\"coverContainer\">{this.props.children}</div>\n            </Div>\n        )\n    }\n}\n\n","import React from 'react'\nimport { PanelHeader, platform, IOS, PanelHeaderBack } from \"@vkontakte/vkui\";\n\n\nexport default class Navar extends React.Component<any, any> {\n    render() {\n        let { go, dataTo, meta, buttonColor} = this.props\n        const osname = platform();\n    \n        return (<PanelHeader className=\"navBar\" style={(() => osname === IOS ? {} : { marginTop: '81px' })()} left={<PanelHeaderBack onClick={go} data-to={dataTo} data-meta={meta} style={{color: buttonColor}}/>}>{this.props.children}</PanelHeader>)\n    }\n}","import React from 'react'\nimport { Tabs, TabsItem, HorizontalScroll } from '@vkontakte/vkui'\n\ninterface iRubricTabs {\n    rubric: any\n    history: any[]\n    lessons: any[]\n    onClickHandler: (tabName: string) => void\n    selectedTab: string\n}\n\nexport default class RubricTabs extends React.Component<iRubricTabs, any> {\n\n    render() {\n        let { rubric, history, onClickHandler, selectedTab, lessons } = this.props\n        \n        return <Tabs>\n            <HorizontalScroll>\n            {(lessons)\n                ?\n                <TabsItem\n                    onClick={() => onClickHandler('schedule')}\n                    selected={selectedTab === 'schedule'}\n                >Расписание</TabsItem>\n                : null\n\n            }\n\n\n\n            {(history && history.length !== 0)\n                ? <TabsItem\n                    onClick={() => onClickHandler('history')}\n                    selected={selectedTab === 'history'}\n                >Прогресс</TabsItem>\n                : null\n            }\n\n            {(rubric['Описание'])\n                ? <TabsItem\n                    onClick={() => onClickHandler('desc')}\n                    selected={selectedTab === 'desc'}\n                >О рубрике</TabsItem>\n                : null\n\n            }\n\n            </HorizontalScroll>\n            \n        </Tabs>\n    }\n}","import React from 'react'\nimport { Cell } from '@vkontakte/vkui'\n\ninterface iScheduleListItem {\n    lesson: any\n    onCellClick: (lesson: any) => void\n}\nexport default class ScheduleListItem extends React.Component<iScheduleListItem, any>{\n\n\n    render() {\n\n        let { lesson, onCellClick } = this.props\n        return <Cell\n            expandable\n            multiline\n            onClick={()=>onCellClick({ lessonID: lesson.recID })}\n            before={<div className=\"time\"></div>}\n            description={`${lesson['Время']} ${lesson['Описание'] ? ',' + lesson['Описание'].substring(0, 70) : ''}`}\n        >\n            {`${lesson['Name']}`}\n        </Cell>\n    }\n\n}","import React from 'react'\nimport { Group } from '@vkontakte/vkui'\nimport ScheduleListItem from './ScheduleListItem';\n\ninterface iScheduleList {\n    rubric: any\n    onCellClick: (meta: any) => void\n    lessons: any[]\n}\n\n\n\nexport default class ScheduleList extends React.Component<iScheduleList, any>{\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: true\n        }\n    }\n\n\n    render() {\n        let { lessons, onCellClick } = this.props\n        let days = Object.keys(lessons);\n        return days.map((key, i) => {\n            let les = lessons[key];\n            return <div className=\"calendarWrapper\" key={i}>\n                <Group header={<h1 className=\"calendarHeader\">{key.replace(/(\\d+\\s\\D{3}?).+/gs, '$1') + \", \" + les['day']}</h1>}  >\n                    {(() => {\n                        let less = lessons[key]['items']\n                        return less.map((lesson, index) => {\n                            return (<ScheduleListItem key={index} lesson={lesson} onCellClick={onCellClick} />)\n                        })\n                    })()}\n                </Group>\n            </div>\n        })\n\n\n\n    }\n}","import React from 'react';\n\nexport const star = (fill: string) => <svg width=\"24\" height=\"22\" viewBox=\"0 0 24 22\" xmlns=\"http://www.w3.org/2000/svg\" fill={fill}>\n<path d=\"M12 0L14.8214 8.11672L23.4127 8.2918L16.5651 13.4833L19.0534 21.7082L12 16.8L4.94658 21.7082L7.43493 13.4833L0.587322 8.2918L9.17863 8.11672L12 0Z\" />\n</svg>;\n\nexport const logo = <svg width=\"25\" height=\"24\" viewBox=\"0 0 25 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M15.2 2.6636L7.93161 18.2513H11.033C12.0258 18.2513 12.012 19.799 10.9916 19.799H6.74475C6.12427 19.799 5.8485 19.1496 6.0829 18.6383C6.26215 18.2582 6.43796 17.8782 6.61376 17.4982C6.78956 17.1182 6.96537 16.7382 7.14462 16.3581C9.61277 11.024 12.0671 5.70377 14.5215 0.383494L14.5215 0.383475C14.7559 -0.127825 15.6246 -0.127825 15.859 0.383475C16.0382 0.763482 16.214 1.14349 16.3898 1.5235C16.5656 1.90353 16.7414 2.28356 16.9207 2.6636C18.5971 6.29748 20.2799 9.93137 21.9648 13.5697C22.7467 15.2581 23.529 16.9475 24.3114 18.6383C24.5596 19.1496 24.27 19.799 23.6495 19.799H16.0244V23.2538C16.0244 24.2487 14.4801 24.2487 14.4801 23.2538V19.0252C14.4801 18.6106 14.8386 18.2513 15.2523 18.2513H22.4614L15.2 2.6636ZM24.4 1.4C24.4 0.626843 23.7731 1.11759e-08 23 1.11759e-08C22.2268 1.11759e-08 21.6 0.626843 21.6 1.4C21.6 2.17316 22.2268 2.8 23 2.8C23.7731 2.8 24.4 2.17316 24.4 1.4Z\" fill=\"white\" />\n</svg>","import React from 'react'\nimport { Header, Group, Cell, Div, List } from '@vkontakte/vkui'\nimport { star } from '../icons'\n\ninterface iHistoryList {\n    history: any[]\n}\nexport default class HistoryList extends React.Component<iHistoryList, any>{\n\n    parseDate = (iso: string) => {\n        var arr = [\n            'января',\n            'февраля',\n            'марта',\n            'апреля',\n            'мая',\n            'июня',\n            'июля',\n            'августа',\n            'сентября',\n            'октября',\n            'ноября',\n            'декабря',\n        ];\n        let date = new Date(iso)\n        let month = arr[+date.getMonth()];\n        const result = `${date.getDate()} ${month} ${date.getFullYear()}, ${date.toLocaleTimeString().replace(/(.*:.*?):\\d+/gs, '$1')}`\n        return result\n    }\n\n    private parseHistory = (history: any[]) => {\n\n        return history\n            .filter(el => el['Баллы'] && el['Баллы'] > 0)\n            .map((el, i) => {\n                return <Cell key={i} asideContent={el.rubric} className={(() => (el['Баллы']) < 0 ? \"cellNegative\" : \"historyCell\")()} description={(() => {\n                    return this.parseDate(el['Датавремя'])\n                })()\n                } >\n\n                    {(() => {\n\n                        if (!el['Баллы']) return\n\n                        if (el['Баллы'] > 0 && el['Опыт'] && el['Опыт'] > 0) {\n                            return <span><span>{el['Баллы']}</span><span className=\"star\">{star('#000000')}</span><span>,&nbsp;{el['Опыт']}&nbsp;опыта {(() => el['Комментарий'] ? \"• \" + el['Комментарий'] : \"\")()}</span></span>\n                        } else if (el['Баллы'] === 0 && el['Опыт'] && el['Опыт'] > 0) {\n                            return <span>{el['Опыт']}&nbsp;опыта {(() => el['Комментарий'] ? \"• \" + el['Комментарий'] : \"\")()}</span>\n\n                        } else if (!el['Опыт']) {\n                            return <span><span>{el['Баллы']}</span><span className=\"star\">{star('#000000')}</span>{(() => el['Комментарий'] ? \"• \" + el['Комментарий'] : \"\")()}</span>\n\n                        }\n                    })()\n                    }\n\n                </Cell>\n            })\n    }\n\n    render() {\n\n        let { history } = this.props\n\n        return <>\n\n\n            <Group header={<Header mode=\"secondary\">Начисления</Header>} className=\"history\">\n                {(() => {\n                    if (history.length === 0) {\n                        return <Div>Вы пока не участвовали ни в одной активности в этой рубрике.</Div>\n                    }\n                    return <List> {this.parseHistory(history)} </List>\n                })()}\n\n            </Group>\n        </>\n\n\n    }\n\n}","//DEVELOPMENT\n// export const AIR_CONFIG = {\n//     apikey: 'keyCjoy0c7MaRyisi',\n//     base: 'appJJ0nmLtF6XYalJ',\n//     tLOGS: 'Начисления и списания',\n//     tUSERS: 'Участники'\n// }\n\n//PRODUCTION\nexport const AIR_CONFIG = {\n    apikey: 'keyCjoy0c7MaRyisi',\n    base: 'appEXq7BJ3ceoFRtr',\n    // base: 'apprhfMNTLVTiJC5A', //DEV\n    tLOGS: 'Начисления и списания',\n    tUSERS: 'Участники'\n}","\nimport * as  Air from 'airtable';\nimport { iBaseConnector } from \"./BaseConnector\";\n\n\n\n\nexport interface iSort { field: string, direction: \"desc\" | \"asc\" }\n\n// export interface any {\n//     title?: string\n//     level?: number\n//     name?: string\n// }\n\nexport interface iAirtableListOptions {\n    filter?: any\n    filterByFormula?: string\n    fields?: Array<string>,\n    sort?: iSort[],\n    view?: string,\n    maxRecords?: number | string\n}\n\n\nexport interface iAirConfig {\n    apikey: string\n    base: string\n}\n\nexport interface iAirtableCreateOptions {\n    fields: any\n}\n\nexport interface iAirtableUpdateOptions {\n    id: string\n    fields: any\n}\n\nexport interface iAttachment {\n    url: string\n}\n\n\nexport class AirtableConnector implements iBaseConnector {\n    private air: Airtable\n\n    constructor(config: any) {\n        this.air = new Airtable(config);\n    }\n    list = async (listname: string, options?: iAirtableListOptions): Promise<any[]> => {\n        if (options && options.filter) {\n            options.filterByFormula = this.generateFilterstring(options.filter)\n            \n            delete options.filter\n        }\n        return this.air.list(listname, options)\n    }\n    getByID = async (id: string, listname: string): Promise<any> => this.air.find(id, listname)\n    create = async (data: iAirtableCreateOptions[]): Promise<any[]> => Promise.resolve([{ title: 'name' }])\n    update = async (data: iAirtableUpdateOptions[]): Promise<any[]> => Promise.resolve([{ title: 'name' }])\n\n\n    protected generateFilterstring = (fileds: any): string => {\n\n        let keys = Object.keys(fileds)\n\n        let arr: string[] = []\n        keys.map(key => {\n            let reg = /^([><=!]*)(.*)/gs\n            let value = fileds[key].replace(reg, '$2');\n            let condition = fileds[key].replace(reg, '$1')\n\n            if (value === 'null') value = 'BLANK()'\n            else if (isNaN(value)) value = \"'\" + value + \"'\"\n\n            arr.push((condition === '!=') ? 'NOT({' + key + '}=' + value + ')' : '{' + key + '}' + condition + value)\n            return key\n        })\n\n        return (arr.length === 1) ? arr[0] : 'AND(' + arr.join(', ') + ')'\n    }\n}\n\n\nexport default class Airtable extends Air {\n\n    private base: any\n\n\n    constructor(config: iAirConfig) {\n        super({ endpointUrl: 'https://api.airtable.com', apiKey: config.apikey })\n        this.base = super.base(config.base)\n    }\n\n\n\n\n    list = async (listName: string, options?: iAirtableListOptions) =>\n        new Promise<Array<any>>((resolve, reject) => {\n            let cells: any[] = []\n\n\n\n            this.base(listName).select(options ? options : {})\n                .eachPage(function page(records: any[], fetchNextPage: () => void) {\n                    records\n                        .forEach(el => {\n                            el.fields.rec_id = el.id\n                            cells.push(el.fields)\n                        })\n\n                    // This function (`page`) will get called for each page of records.\n                    fetchNextPage()\n\n                }, function done(err: any) {\n                    if (err) { console.error(err); reject(err); return; }\n                    resolve(cells)\n                })\n\n        })\n\n\n\n\n\n    find = async (rec_id: string, listName: string) =>\n        new Promise<any>((resolve, reject) => {\n            this.base(listName).find(rec_id, function (err: any, record: any) {\n                if (err) { reject(err); return; }\n                if (!record) { reject('no record: ' + rec_id) }\n                record.fields.rec_id = record.id\n                resolve(record.fields)\n            })\n        });\n\n    create = async (fields: iAirtableCreateOptions[], listName: string, params?: { typecast: boolean }) =>\n        new Promise<any[]>(async (resolve, reject) => {\n\n            let arrays: any[] = [],\n                size = 10\n\n            while (fields.length > 0) arrays.push(fields.splice(0, size))\n            for (const bunch of arrays) {\n\n                await this.base(listName).create(bunch, params, function (err: any, records: any[]) {\n                    if (err) { console.error(err); return; }\n                    resolve(records.map(record => {\n                        record.fields.rec_id = record.id\n                        return record.fields\n                    }))\n                })\n\n                await setTimeout(() => { }, 2000)\n            }\n\n        })\n\n\n    replace = (rec_id: string, field: any, listName: string) =>\n        new Promise(resolve => {\n\n            this.base(listName)\n                .replace(rec_id, field, (err: any, record: any) => {\n                    if (err) { console.error(err); return; }\n                    record.fields.rec_id = record.id\n                    resolve(record.fields)\n                })\n        })\n\n    update = (params: iAirtableUpdateOptions[], listName: string, options: { typecast: boolean }) =>\n        new Promise<any[]>(async (resolve, reject) => {\n\n            var arrays: any[] = [],\n                size = 10\n\n            while (params.length > 0) arrays.push(params.splice(0, size))\n            for (const bunch of arrays) {\n\n                await this.base(listName).update(bunch, options, (err: any, records: any[]) => {\n                    if (err) {\n                        console.error(err)\n                        reject(err)\n                    }\n                    resolve(records.map(record => {\n                        record.fields.rec_id = record.id\n                        return record.fields\n                    }))\n                })\n\n                await setTimeout(() => { }, 2000)\n            }\n\n\n\n        })\n\n\n    delete = (rec_ids: string[], listName: string) =>\n        new Promise((resolve, reject) => {\n            this.base(listName).destroy(rec_ids, (err: any, record: any) => {\n                if (err) {\n                    console.error(err)\n                    reject(err)\n                }\n                resolve(rec_ids)\n            })\n        })\n\n}\n","export const parseQueryString = (string) => {\n    return string.slice(1).split('&')\n        .map((queryParam) => {\n            let kvp = queryParam.split('=');\n            return { key: kvp[0], value: kvp[1] }\n        })\n        .reduce((query, kvp) => {\n            query[kvp.key] = kvp.value;\n            return query\n        }, {})\n};\n\nexport const parseDate = (iso: string) => {\n    var arr = [\n        'января',\n        'февраля',\n        'марта',\n        'апреля',\n        'мая',\n        'июня',\n        'июля',\n        'августа',\n        'сентября',\n        'октября',\n        'ноября',\n        'декабря',\n    ];\n    let date = new Date(iso)\n    let month = arr[+date.getMonth()];\n    const result = `${date.getDate()} ${month} ${date.getFullYear()}, ${date.toLocaleTimeString().replace(/(.*:.*?):\\d+/gs, '$1')}`\n    return result\n}\n\nexport function Time(date) {\n    var d = new Date(date);\n    d.setHours(d.getHours());\n    let res = d.toTimeString().substring(0, 5);\n    return res;\n\n}\n\n\nexport function formatLessonTime(el: any) {\n    const days = {\n        0: 'вс',\n        1: 'пн',\n        2: 'вт',\n        3: 'ср',\n        4: 'чт',\n        5: 'пт',\n        6: 'сб'\n    }\n\n    let key = parseDate(el['Дата']).replace(/^(\\d+\\s.+?)\\s.+/gs, '$1');\n    el['День недели'] = days[new Date(el['Дата']).getDay()]\n    el['Время'] = Time(el['Дата'])\n    el['Дата'] = key;\n    return el\n}\n\n\nexport function declOfNum(number, titles) {  \n    let cases = [2, 0, 1, 1, 1, 2];  \n    return titles[ (number%100>4 && number%100<20)? 2 : cases[(number%10<5)?number%10:5] ];  \n}\n","import React from 'react';\nimport { Panel, Div, Card, Group, Progress, InfoRow } from '@vkontakte/vkui';\n\nimport \"./Rubric.css\";\nimport Cover from '../Cover/Cover';\nimport ReactMarkdown from 'react-markdown';\nimport Navbar from '../Navbar/Navbar';\n\nimport RubricTabs from './RubricTabs';\nimport ScheduleList from './ScheduleList';\nimport HistoryList from '../HistoryList';\n\n\nimport { AIR_CONFIG } from '../../config'\nimport Airtable from '../../Airtable';\nimport { parseDate, Time } from '../../Helpers';\n\nlet base = new Airtable(AIR_CONFIG)\n\n\ninterface iRubricPage {\n\tid: string\n\tuser: any\n\trubric: any\n\tgo: (route: string, meta?: any) => void\n\trubricCellClickHandler: (dataTo: string, metaData: any) => void\n\tgetLessons: () => Promise<any[]>\n}\n\n\nclass Rubric extends React.Component<iRubricPage, any> {\n\n\t_isMounted: boolean = false\n\n\tstate = {\n\t\tpurchases: null,\n\t\tlessons: null,\n\t\tactiveTab: null,\n\t\tgoods: null,\n\t\thistory: []\n\t}\n\n\n\n\n\tasync componentDidMount() {\n\t\tthis._isMounted = true\n\t\tlet { rubric } = this.props\n\t\tconst lessons = await this.getLessons()\n\n\t\tthis.setState({ lessons: lessons });\n\n\t\tlet history = await this.fetchHistoryData(this.props.user.id, rubric['recID'], rubric['Таблица'])\n\t\tlet purchases = await this.getPurchases()\n\t\tif(this._isMounted) {\n\t\t\tthis.setState({ history: history })\n\t\t\tif (lessons && Object.keys(lessons).length !== 0) {\n\t\t\t\tthis.setState({ activeTab: 'schedule' })\n\t\t\t} else if (history.length !== 0) {\n\t\t\t\tthis.setState({ activeTab: 'history' })\n\t\t\t} else {\n\t\t\t\tthis.setState({ activeTab: 'desc' })\n\t\t\t}\n\n\t\t\tthis.setState({ purchases:  purchases });\n\t\t}\n\t\t\n\t}\n\n\n\n\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t}\n\n\n\tasync fetchHistoryData(userID: number, rubricID: string, rubricTable: string) {\n\t\treturn base.list(rubricTable, { filterByFormula: `AND({VK-ID} = ${userID}, NOT({Рубрика}=BLANK()))` }).then((history: any[]) => {\n\t\t\treturn history.filter(item => item['Рубрика'][0] === rubricID)\n\t\t}).catch(e => [])\n\t}\n\n\n\tasync getLessons() {\n\t\treturn this.props.getLessons().then(res=>res.filter(el=>el['RubricID']===this.props.rubric.recID))\n\t\t.then((res: any[]) => {\n\n\t\t\tif (res.length === 0) return\n\t\t\tlet obj = {}\n\n\n\t\t\tconst days = {\n\t\t\t\t0: 'вс',\n\t\t\t\t1: 'пн',\n\t\t\t\t2: 'вт',\n\t\t\t\t3: 'ср',\n\t\t\t\t4: 'чт',\n\t\t\t\t5: 'пт',\n\t\t\t\t6: 'сб'\n\t\t\t}\n\n\t\t\tres.forEach(el => {\n\t\t\t\tlet key = parseDate(el['Дата']).replace(/^(\\d+\\s.+?)\\s.+/gs, '$1');\n\t\t\t\tlet date = new Date(el['Дата']);\n\n\t\t\t\tobj[key] = {\n\t\t\t\t\tdate: key,\n\t\t\t\t\tday: days[date.getDay()],\n\t\t\t\t\titems: []\n\t\t\t\t}\n\n\n\t\t\t})\n\n\n\n\n\t\t\tres.forEach(el => {\n\t\t\t\tlet key = parseDate(el['Дата']).replace(/^(\\d+\\s.+?)\\s.+/gs, '$1');\n\t\t\t\tel['День недели'] = days[new Date(el['Дата']).getDay()]\n\t\t\t\tel['Время'] = Time(el['Дата'])\n\t\t\t\t// el['Окончание'] = Time(el['Время окончания'])\n\t\t\t\tel['Дата'] = key;\n\t\t\t\tel['rubric'] = this.props.rubric;\n\t\t\t\tobj[key]['items'].push(el)\n\t\t\t})\n\n\t\t\tconsole.log(obj)\n\t\t\treturn obj\n\t\t})\n\t}\n\n\n\n\tselect(e) {\n\t\tconst mode = e.currentTarget.dataset.mode;\n\t\tthis.setState({ mode });\n\t}\n\n\n\n\n\n\tgetPurchases = async () => {\n\t\tconst user = this.props.user;\n\t\tconst rubric = this.props.rubric;\n\t\tlet res = await base.list('Покупки', { filterByFormula: `AND({VK-ID}=${user.id}, {Статус}=BLANK() )`, fields: [\"Название\", \"Рубрика\", \"Осталось\", \"Датавремя\", \"Кол-во тренировок\", \"Посещеные тренировки\"] }).catch(err => {\n\t\t\tconsole.log(err);\n\t\t\treturn [];\n\t\t}) as [];\n\n\t\tlet pursh = res.filter(el => el['Осталось'] && el['Рубрика'] && el['Рубрика'][0] === rubric.recID)\n\t\treturn pursh[0];\n\t}\n\n\trenderAbonement = () => {\n\n\t\tif (!this.state.goods) return;\n\n\t\treturn this.state.goods.map((good, i) => {\n\n\t\t\treturn <Card size=\"l\" key={i}>\n\t\t\t\t<div className=\"abonement\">\n\t\t\t\t\t<h2>{good[\"Название товара\"]}</h2>\n\t\t\t\t</div>\n\t\t\t</Card>\n\t\t})\n\t}\n\n\n\n\trender() {\n\n\t\tlet {\n\t\t\tgo,\n\t\t\trubric,\n\t\t} = this.props\n\n\n\n\t\t// const cover = () => rubric['Обложка'] ? `url(${rubric['Обложка'][0]['url']}) center/cover no-repeat` : '';\n\n\t\treturn (\n\n\t\t\t<Panel id='rubric'>\n\n\t\t\t\t<Navbar go={() => go('profile')} dataTo='profile'></Navbar>\n\n\t\t\t\t<Cover height=\"fit-content\">\n\t\t\t\t\t{/* <Cover background={cover()} height=\"fit-content\"> */}\n\t\t\t\t\t<Div className=\"desc\"><h1>{rubric['Название']}</h1></Div>\n\t\t\t\t</Cover>\n\n\n\t\t\t\t<RubricTabs\n\t\t\t\t\trubric={rubric}\n\t\t\t\t\tselectedTab={this.state.activeTab}\n\t\t\t\t\tlessons={this.state.lessons}\n\t\t\t\t\thistory={this.state.history}\n\t\t\t\t\tonClickHandler={(tabName) => this.setState({ activeTab: tabName })}\n\t\t\t\t/>\n\n\t\t\t\t{(() => {\n\t\t\t\t\tif (!rubric['Итог опыт'] || !this.state.history) return\n\n\t\t\t\t\tlet exp = this.state.history.filter(el => el['Опыт']).map(el => el['Опыт']).reduce((current, next) => current + next, 0);\n\t\t\t\t\treturn <Group title=\"Прогресс\" className=\"progressBarContainer\">\n\t\t\t\t\t\t<InfoRow header={`${Math.round((exp * 100) / rubric['Итог опыт'])}%`} className=\"progressBar\">\n\t\t\t\t\t\t\t<Progress value={(exp * 100) / rubric['Итог опыт']} style={{ width: '100%' }} />\n\t\t\t\t\t\t</InfoRow>\n\t\t\t\t\t</Group>\n\t\t\t\t})()}\n\n\t\t\t\t{(this.state.activeTab === 'desc' && rubric['Описание'])\n\t\t\t\t\t? <Div style={{ paddingLeft: 'var(--wrapper-padding-2x)' }}><ReactMarkdown source={rubric['Описание']} /> </Div>\n\t\t\t\t\t: ''\n\t\t\t\t}\n\n\n\n\t\t\t\t{(this.state.activeTab === 'history') ? <HistoryList history={this.state.history} /> : ''}\n\n\n\t\t\t\t{(() => {\n\t\t\t\t\tif (this.state.activeTab !== 'schedule') return;\n\t\t\t\t\treturn <ScheduleList\n\t\t\t\t\t\tlessons={this.state.lessons}\n\t\t\t\t\t\tonCellClick={(e) => this.props.go('lesson', e)}\n\t\t\t\t\t\trubric={rubric}\n\t\t\t\t\t/>\n\t\t\t\t})()}\n\n\t\t\t</Panel>\n\n\t\t);\n\t}\n}\n\n\nexport default Rubric;","import React from 'react';\nimport './LevelBubble.css'\n\nexport default class LevelBubble extends React.Component<any, any> {\n    render() {\n\n        let {\n            action\n        } = this.props\n\n        return (\n            <div className=\"levelBubble\" onClick={action ? action : null}>{this.props.children}</div>\n        )\n    }\n}","import React from 'react'\nimport { Tabs, TabsItem, HorizontalScroll } from '@vkontakte/vkui'\n\ninterface iProfileTabs {\n    tabs: string[]\n    history: any[]\n    onClickHandler: (tabName: string) => void\n    selectedTab: string\n}\n\nexport default class ProfileTabs extends React.Component<iProfileTabs, any> {\n\n    render() {\n        let { history, onClickHandler, selectedTab, tabs } = this.props\n\n        if (!tabs||tabs.length === 0) return null\n\n        return <Tabs>\n            <HorizontalScroll>\n                \n                {\n                    (() => {\n                        if (tabs.find(el => el === 'tasks')) {\n                            return <TabsItem\n                                onClick={() => onClickHandler('tasks')}\n                                selected={selectedTab === 'tasks'}\n                            >Задания</TabsItem>\n                        }\n                    })()\n                }\n\n{\n                    (() => {\n                        if (tabs.find(el => el === 'achieves')) {\n                            return <TabsItem\n                                onClick={() => onClickHandler('achieves')}\n                                selected={selectedTab === 'achieves'}\n                            >Достижения</TabsItem>\n                        }\n                    })()\n                }\n\n                {\n                    (() => {\n                        if (tabs.find(el => el === 'rubrics')) {\n                            return <TabsItem\n                                onClick={() => onClickHandler('rubrics')}\n                                selected={selectedTab === 'rubrics'}\n                            >Рубрики</TabsItem>\n                        }\n                    })()\n                }\n\n\n\n                {(history && history.length !== 0 && tabs.find(el => el === 'history'))\n                    ? <TabsItem\n                        onClick={() => onClickHandler('history')}\n                        selected={selectedTab === 'history'}\n                    >Начисления</TabsItem>\n                    : null\n                }\n            </HorizontalScroll>\n        </Tabs>\n    }\n}","import React from 'react'\nimport { Group, List, Cell, } from '@vkontakte/vkui';\nimport { iModalData, iUser, iAchieve, iRubric } from '../../interfaces';\nimport { AIR_CONFIG } from '../../config'\nimport Airtable from '../../Airtable';\n\n\nlet base = new Airtable(AIR_CONFIG)\n\n\n\ninterface iTodoCardsList {\n    user: iUser\n    achieves: iAchieve[]\n    openModal: (modal: { type: string, data: iModalData }) => void\n    onButtonClick?: (route: string, meta: any) => void\n    rubrics: iRubric[]\n}\n\nexport default class TodoCardsList extends React.Component<iTodoCardsList, any> {\n    _isMounted: boolean = false\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            achieves: null\n        }\n    }\n    async componentDidMount() {\n        this._isMounted = true\n        let proms = this.props.achieves.map(achieve => this.fetchRubricHistory(achieve).then((userHistory: any[]) => {\n            achieve.achievedItems = userHistory || []\n            let acivedItem = userHistory.filter(el => el['Ачивка']).find(el => el['Ачивка'][0] === achieve.recID)\n            achieve.acivedItem = acivedItem\n            return achieve\n        }))\n\n        let result = await Promise.all(proms);\n\n        if (this._isMounted) {\n            this.setState({\n                achieves: result\n            })\n        }\n\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    async fetchRubricHistory(record: iAchieve) {\n\n        return base.list(record['Таблица'], {\n            filterByFormula: `AND(\n                {VK-ID}=${this.props.user.id}, \n                {Средняя} >= ${record['Оценка']}, \n                {RubricID}='${record.RubricID}',\n                NOT({Ачивка}=BLANK())\n                )`\n        })\n            .catch(e => {\n                console.error(e)\n                return []\n            })\n    }\n\n\n\n\n    render() {\n\n        let { achieves, openModal, rubrics, onButtonClick } = this.props\n\n        // const checkIfTaskDone = (task: any): boolean => {\n        //     if (!task['Участники']) return false\n        //     const id = task['Участники'].find(el => el === user.recID)\n        //     if (id) return true\n        //     return false\n        // }\n\n        const cells = (arr: iAchieve[]) => {\n            return arr.map((achive, i) => {\n\n                return <Cell\n                    key={i}\n                    multiline\n                    onClick={() => openModal({\n                        type: 'modal',\n                        data: {\n                            title: achive['Name'],\n                            desc: achive['Описание'],\n                            onButtonClickHandler: () => onButtonClick('rubric', rubrics.find(el => el.recID === achive.RubricID)),\n                            buttonLabel: 'Перейти в рубрику'\n                            // body: (<Div>Вот мой прогресс</Div>)\n                        }\n                    })}\n                    data-to='lesson'\n\n                    before={<div className=\"roundContainer\">\n                        <div className=\"round\">\n                            <label className=\"roundCircle\" style={achive.acivedItem ? { backgroundColor: 'var(--color-spacegray)' } : { backgroundColor: '#fff' }}></label>\n                        </div>\n                    </div>}\n\n                    description={!achive.acivedItem ? `Выполнено ${achive.achievedItems ? achive.achievedItems.length : 0} из ${achive[\"Кол-во работ\"]}` : `+ ${achive.acivedItem['Опыт']} опыта`}\n                >\n                    <div style={achive.acivedItem ? { textDecoration: 'line-through', color: 'var(--color-spacegray)' } : {}}>{`${achive['Name']}`}</div>\n                </Cell>\n            })\n        }\n\n        return <Group separator=\"hide\" style={{marginBottom: 'calc(var(--wrapper-padding-2x) * 3)'}}>\n\n            <List >\n                {cells(achieves.filter(el => !el.acivedItem).slice(0, 4))}\n                {cells(achieves.filter(el => el.acivedItem))}\n            </List>\n        </Group>\n    }\n}","import React from 'react'\n\nimport { Panel, Cell, List, PanelHeader, Group, Avatar, platform, ANDROID, Progress, Card, CardScroll, Header, Div, CardGrid } from '@vkontakte/vkui'\nimport Icon24BrowserForward from '@vkontakte/icons/dist/24/browser_forward'\nimport \"./Profile.css\"\nimport Cover from '../Cover/Cover'\nimport { star, logo } from '../../icons'\nimport LevelBubble from './LevelBubble/LevelBubble'\nimport ProfileTabs from './ProfileTabs'\nimport HistoryList from '../HistoryList'\nimport TodoCardsList from './ToDoCardList'\nimport { iModalData, iUser } from '../../interfaces'\nimport * as removeMd from 'remove-markdown';\nimport { formatLessonTime } from '../../Helpers'\n\n\ninterface iProfilePage {\n    id: string,\n    rubrics: any[]\n    go: (route: string, meta?: any) => void\n    user: iUser\n    snackbar: any\n    openSnackbar: () => void\n    history: any[]\n    achieves: any[]\n    openModal: (modal: { type: string, data?: iModalData }) => void\n    events: any[]\n    getEvents: () => Promise<any[]>\n}\n\n\n\nclass Profile extends React.Component<iProfilePage, any> {\n\n    _isMounted: boolean = false\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            tabs: ['rubrics', 'history', 'achieves'],\n            selectedTab: 'tasks',\n            events: [],\n            isLoading: false\n        }\n    }\n\n    async componentDidMount() {\n        this._isMounted = true\n        this.setState({ isLoading: true })\n        if (this.props.achieves && this.props.achieves.length !== 0) {\n            if (!this.state.selectedTab) this.setState({ selectedTab: 'tasks' })\n            let tabs = this.state.tabs\n            tabs.push('tasks')\n            this.setState({ tabs: tabs })\n        }\n\n        let events = await this.props.getEvents().then(res => res.map(el=>formatLessonTime(el)).filter(el => el['Рубрика'] !== 'Design Exp'))\n\n        if (this._isMounted) {\n            this.setState({ lessons: this.props.events, isLoading: false, events: events })\n        }\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n\n\n    render() {\n\n        let {\n            user,\n            go,\n            rubrics,\n            snackbar,\n            achieves,\n            openModal,\n            events\n        } = this.props\n\n\n        \n\n        let cardList = () => {\n            return <Group\n                header={this.state.isLoading ? <div className=\"loader\" style={{ marginLeft: 'var(--wrapper-padding)', height: 'var(--wrapper-padding-2x)', width: '150px', }}></div> : <Header mode=\"secondary\">Участвуй сегодня</Header>}\n                style={{ marginBottom: 'calc(var(--wrapper-padding-2x) * 3)' }}\n                separator=\"hide\"\n            >\n                <CardGrid>\n                    {(() => {\n                        if (this.state.isLoading)\n                            return [1, 2].map((el, i) => <Card key={i} size='m' className='loader' ><Div style={{ width: 144, height: 120 }}></Div></Card>)\n\n                        if (events && events.length !== 0) {\n                            return events.map(lesson => {\n                                //lesson['Обложка'] ? `url(${lesson['Обложка'][0]['url']})` :\n                                return <Card\n                                    key={lesson.recID}\n\n                                    style={{ height: 'fit-content' }}\n                                    size='l'\n                                    mode='shadow'\n                                    onClick={() => go('lesson', { lessonID: lesson.recID, lesson: lesson, backTo: 'profile' })}\n                                >\n                                    <Div style={{}} ><strong>{lesson.event_type['Name']}</strong>\n                                        <p>{removeMd(lesson.event_type['Описание'].slice(0, 200) + '…')}</p>\n                                        <small>{lesson['Рубрика']} • От {lesson['Опыт']} опыта</small></Div>\n                                </Card>\n                            })\n                        }\n\n                    })()}\n                </CardGrid>\n            </Group>\n\n        }\n\n        let eventsCards = () => {\n            return this.state.events.map(event => {\n                return <Card\n                    size=\"s\"\n                    style={{ color: 'white', height: 'fit-content', background: 'linear-gradient(200.98deg, #485563 -13.11%, #29323C 75.28%)' }}\n                    key={event['rec_id']}\n                    onClick={() => go('lesson', { lessonID: event.recID, lesson: event, backTo: 'profile' })}\n                >\n                    <Div style={{ width: '110px' }} >\n                        <strong>{event['Рубрика']}</strong>\n                        <div style={{lineHeight: '120%'}}>{event['Name']}</div>\n                        <small>\n                            \n                            <br />\n                            {event['Дата']}, { event['Время'] } МСК\n                        </small>\n                    </Div>\n                </Card >\n            })\n\n        }\n\n\n\n        return (\n\n            <Panel id='profile'  >\n                <PanelHeader></PanelHeader>\n                <Cover height=\"184px\">\n                    <div className=\"logo\" style={{ top: (platform() === ANDROID) ? '25px' : '37px' }}>{logo}</div>\n                    <div className=\"amountContainer\">\n                        <Avatar src={user.photo_200} size={72}></Avatar>\n                        <div className=\"amountWrapper\">\n                            <span className=\"amount\">{user['Баланс']}</span>\n                            <span className=\"star\">{star('#ffffff')}</span>\n                            <br />\n                            {`${user.need_exp_to_level_up} опыта до ${+user['Уровень'] + 1} уровня`}\n                            <Progress value={(user.levelExperience * 100) / (user.next_level[\"Требует опыта\"] - user.current_level['Требует опыта'])} style={{ width: '100%' }} />\n                            {/* <a href=\"https://vk.com/@lean.school-kak-zarabotat-v-line-bally-i-zachem\" target=\"_blank\" rel=\"noopener noreferrer\">Зачем баллы?</a> */}\n                            <LevelBubble className=\"levelBubble\">{Math.round(user['Уровень'])}</LevelBubble>\n                        </div>\n                    </div>\n                </Cover>\n\n                <ProfileTabs tabs={this.state.tabs} history={this.props.history} selectedTab={this.state.selectedTab} onClickHandler={(tabName) => this.setState({ selectedTab: tabName })} />\n\n\n                {\n                    (() => {\n                        if (this.state.selectedTab !== 'tasks') return\n                        if (this.state.events.length === 0) return\n                        return <Group header={<Header mode=\"secondary\">Актуальное</Header>} separator='hide'>\n                            <CardScroll>\n                                {eventsCards()}\n                            </CardScroll>\n                        </Group>\n                    })()\n                }\n\n                {(() => {\n                    if (this.state.selectedTab !== 'tasks') return\n                    return cardList()\n                })()}\n\n\n                {(() => {\n\n                    if (this.state.selectedTab !== 'achieves') return\n                    return <TodoCardsList achieves={achieves} openModal={openModal} user={user} rubrics={rubrics} onButtonClick={go} />\n                })()}\n                {(() => {\n                    if (this.state.selectedTab === 'rubrics') {\n                        return <Group title=\"Рубрики\" >\n                            <List>\n                                {rubrics.map((rubric, i) => {\n                                    let cover = () => rubric['Обложка'] ? <Avatar mode=\"image\" src={rubric['Обложка'][0]['url']} size={72} /> : \"\"\n                                    return (<Cell\n                                        key={i}\n                                        before={cover()}\n                                        multiline\n                                        description={rubric['desc']}\n                                        asideContent={<Icon24BrowserForward fill=\"var(--icon_secondary)\" />}\n                                        onClick={(e) => go('rubric', rubric)}\n                                    >{rubric['Название']}</Cell>)\n                                })}\n                            </List>\n                        </Group>\n                    }\n                })()}\n\n\n                {(this.props.history.length !== 0 && this.state.selectedTab === 'history') ? <HistoryList history={this.props.history} /> : ''}\n                {snackbar}\n\n\n            </Panel>\n\n        )\n    }\n}\n\n\n\nexport default Profile","import React from 'react';\nimport { Panel, Div, FixedLayout, Button, Link, ANDROID, platform, Group, Header, Cell } from '@vkontakte/vkui';\nimport \"./LessonCard.css\";\nimport ReactMarkdown from 'react-markdown';\nimport bridge from '@vkontakte/vk-bridge';\nimport Navbar from '../Navbar/Navbar';\nimport { parseQueryString, formatLessonTime } from '../../Helpers';\nimport { iUser, iRubric, iModalData } from '../../interfaces';\nimport { AIR_CONFIG } from '../../config'\nimport Airtable from '../../Airtable';\nimport * as Typograf from 'typograf';\nimport Iframe from 'react-iframe';\nconst tp = new Typograf({ locale: ['ru', 'en-US'] });\n\nlet base = new Airtable(AIR_CONFIG)\n\n\nconst osname = platform();\n\ninterface iLessonCard {\n\tid: string\n\tlessonID: string\n\tuser: iUser\n\tonBackClick: (route: string, meta?: any) => void\n\tbackTo?: string\n\tpurchases: any[]\n\trubric?: iRubric\n\tlesson?: any\n\topenModal: (modal: { type: string, data?: iModalData }) => void\n}\n\n\nclass LessonCard extends React.Component<iLessonCard, any> {\n\n\t_isMounted: boolean\n\tstate = { message: null, lesson: null, rubric: null, selectedFile: null, hasAccess: null }\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis._isMounted = false;\n\t}\n\n\tasync componentDidMount() {\n\t\tthis._isMounted = true;\n\n\t\tlet { lesson, rubric } = this.props\n\n\t\t//если передан объект lesson, то используем его, если нет, то делаем фетч\n\t\tlet les = lesson ? lesson : await this.fetchLessonData();\n\t\tif (!les) return this.props.onBackClick('profile')\n\t\t//если передана объект rubric, то используем его, если нет, то делаем фетч\n\t\tlet rub = rubric ? rubric : await this.fetchRubric(les['RubricID']);\n\t\tif (this._isMounted) this.setState({ rubric: rub, lesson: les })\n\n\t\tif (this.state.lesson) this.checkPermissions();\n\t\t(osname === ANDROID) ? bridge.send(\"VKWebAppSetViewSettings\", { \"status_bar_style\": \"dark\", \"action_bar_color\": \"#ffffff\" }) : bridge.send(\"VKWebAppSetViewSettings\", { \"status_bar_style\": \"dark\", });\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t}\n\n\tasync fetchLessonData() {\n\t\tlet lessons = await base.list('Тренировки', { filterByFormula: `{recID}=\"${this.props.lessonID}\"` })\n\t\tif (!lessons[0]) return null\n\t\tlet lesson = formatLessonTime(lessons[0]);\n\t\treturn lesson\n\t}\n\n\n\n\n\tsendData = async () => {\n\t\t// let data = this.state.lesson;\n\t\tlet { rubric } = this.state\n\t\tlet { user, purchases, lesson } = this.props\n\n\t\tlet purchase;\n\n\t\tif (rubric && rubric['Товар'])\n\t\t\tpurchase = purchases.find(el => el['Рубрика'].find(rubricID => rubricID === rubric.recID))\n\n\t\tlet opt = {\n\t\t\t\"Датавремя\": new Date().toISOString(),\n\t\t\t\"Профиль\": [user.rec_id],\n\t\t\t\"Комментарий\": \"Запись на тренировку\",\n\t\t\t\"Покупки\": purchase ? [purchase.recID] : [],\n\t\t\t\"Тренировка\": [lesson.recID]\n\t\t}\n\n\t\tawait base.create([{ fields: opt }], rubric['Таблица']).then(res => {\n\t\t\tconst queryParams = parseQueryString(window.location.search);\n\t\t\tif (queryParams && queryParams.vk_are_notifications_enabled === \"0\") bridge.send(\"VKWebAppAllowNotifications\", {});\n\t\t\tthis.setState({\n\t\t\t\tmessage: (() => {\n\t\t\t\t\treturn <div>Вы записаны <Link onClick={() => this.undo(res, rubric['Таблица'])}>Отменить</Link></div>\n\t\t\t\t})()\n\t\t\t})\n\n\n\t\t}).catch(_ => this.setState({\n\t\t\tmessage: (() => {\n\t\t\t\treturn <div>Что-то сломалось. Напишите мне на <a href=\"mailto:reva@leandesign.pro\">reva@leandesign.pro</a></div>\n\t\t\t})()\n\t\t}))\n\n\t}\n\n\tundo = (obj, listName) => { base.delete([obj.recID], listName).then(res => this.setState({ message: null })).catch(console.log) }\n\n\n\tcheckPermissions = () => {\n\n\t\tlet { lesson } = this.state\n\n\t\t//есть ли у него абонемент?\n\t\tlet purchases = this.props.purchases || [];\n\n\t\tlet res = { hasAccess: true, message: null }\n\n\n\t\tif (purchases.length === 0) res.hasAccess = false\n\n\t\tif (lesson['Осталось'] === 0) res.message = 'Не осталось мест'\n\n\t\tif (this.props.user && !lesson['Ссылка'] && lesson['Участники'].find(el => +el === this.props.user['VK-ID'])) {\n\t\t\tres = { hasAccess: false, message: \"Ты в участниках\" }\n\t\t}\n\t\tif (this.props.user && lesson['Ссылка'] && lesson['Участники'].find(el => +el === this.props.user['VK-ID'])) {\n\t\t\tres = { hasAccess: false, message: '👍🏻 Работа сдана' }\n\t\t}\n\n\t\tthis.setState(res)\n\n\t}\n\n\tfetchRubric = (rubricID: string) => {\n\t\treturn base.find(rubricID, 'Рубрики')\n\t}\n\n\n\trender() {\n\n\t\tlet {\n\t\t\tonBackClick,\n\t\t\tid,\n\t\t\tuser,\n\t\t\tbackTo,\n\t\t\topenModal\n\t\t} = this.props\n\n\t\tlet { lesson, rubric } = this.state\n\t\tlet getButton = () => {\n\n\t\t\tif (this.state.hasAccess === false) return <Button size={'l'} onClick={() => openModal({ type: 'paid' })} stretched={true}>К выполнению</Button>\n\t\t\treturn lesson['Ссылка'] ? <Button size={'l'} href={lesson['Ссылка']} target=\"_blank\" stretched={true}>К выполнению</Button> : <Button size={'l'} stretched={true} onClick={() => this.sendData()}>Я буду</Button>\n\t\t}\n\n\t\tlet getInstruction = () => {\n\t\t\treturn <div style={{ height: '100vh' }}>\n\t\t\t\t{/* <Plyr type=\"youtube\" videoId=\"https://youtu.be/jrSKxUAAJcw\" /> */}\n\t\t\t\t<Iframe width=\"100%\" src={lesson.event_type['instruction']} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen />\n\t\t\t</div>\n\t\t}\n\n\t\tlet getInstrButton = () => {\n\t\t\treturn lesson.event_type['instruction']\n\t\t\t\t? <Button\n\t\t\t\t\tsize={'m'}\n\t\t\t\t\tstretched={true}\n\t\t\t\t\tonClick={() => openModal({ type: !this.state.hasAccess ? 'paid' : 'instruction', data: { title: '', body: getInstruction() } })}\n\t\t\t\t>\n\t\t\t\t\tИнструкция\n\t\t\t\t\t</Button> : null\n\t\t}\n\n\t\tlet getDetails = () => {\n\t\t\tlet result = []\n\t\t\tif (lesson.event_type && lesson.event_type['Разбор'])\n\t\t\t\tresult.push(<Cell key={1} description={lesson.event_type['Разбор']}>Разбор</Cell>)\n\n\n\t\t\tif (lesson['Опыт'] && lesson['Опыт'] !== 0)\n\t\t\t\tresult.push(<Cell key={2} description={`Холодно — ${lesson['Опыт']}, Тепло — ${lesson['Опыт'] * 2}, Горячо — ${lesson['Опыт'] * 3}`} multiline={true}>Получите опыта</Cell>)\n\n\t\t\treturn result\n\t\t}\n\n\t\tif (!lesson || !user) return <div id={id}>…</div>\n\n\n\t\treturn (\n\n\t\t\t<Panel id={id}>\n\t\t\t\t<Navbar go={() => onBackClick(backTo ? backTo : 'rubric', rubric)} buttonColor=\"black\"></Navbar>\n\n\t\t\t\t<Group separator=\"hide\">\n\t\t\t\t\t<Div>\n\t\t\t\t\t\t<ReactMarkdown source={tp.execute(lesson.event_type['Описание'] ? lesson.event_type['Описание'] : lesson['Описание'])} />\n\t\t\t\t\t\t{getInstrButton()}\n\t\t\t\t\t</Div>\n\t\t\t\t</Group>\n\n\t\t\t\t{(() => {\n\t\t\t\t\tlet details = getDetails();\n\t\t\t\t\tif (details.length === 0) return\n\t\t\t\t\treturn <Group separator=\"hide\" style={{ backgroundColor: \"var(--color-gray)\", paddingBottom: '80px' }}>\n\t\t\t\t\t\t<Header mode=\"secondary\">Детали</Header>\n\t\t\t\t\t\t{details}\n\t\t\t\t\t</Group>\n\t\t\t\t})()}\n\n\t\t\t\t<FixedLayout vertical=\"bottom\" className=\"bottomBar\" >\n\t\t\t\t\t{\n\t\t\t\t\t\t(() => {\n\t\t\t\t\t\t\tif (this.state.message) return <div>{this.state.message}</div>\n\t\t\t\t\t\t\treturn getButton()\n\t\t\t\t\t\t})()\n\t\t\t\t\t}\n\n\t\t\t\t</FixedLayout>\n\t\t\t</Panel>\n\n\t\t);\n\t}\n}\n\n\n\nexport default LessonCard;","import React from 'react'\nimport { Snackbar, InfoRow, Progress } from '@vkontakte/vkui'\n\n\nexport class ProgressSnackBar extends React.Component<any, any> {\n\n    render() {\n        const { header, count } = this.props\n        return (\n            <Snackbar\n                className=\"snackbar\"\n                layout=\"vertical\"\n                onClose={() => {\n                    this.setState({ snackbar: null })\n                    return {}\n                }}\n            >\n                <InfoRow header={header}>\n                    <Progress value={count} style={{ width: '100%' }} />\n                </InfoRow>\n                <a href=\"https://vk.com/@lean.school-user-level\" target=\"_blank\" rel=\"noopener noreferrer\">Зачем нужен уровень?</a>\n\n            </Snackbar>\n        )\n    }\n\n}","//поля помеченные = null берутся из airtable. Остальные появлятся в коде.\nimport { iLevel } from './Api'\n\nexport class iUser {\n\tid: number\n\tfirst_name: string\n\tlast_name: string\n\tlevelExperience?: number\n\t'Имя': string = null\n\t'VK-ID': number = null\n\t'Баланс': number = null\n\t'Опыт': number = null\n\t'Уровень': number = null\n\t'Email'?: string = null\n\t'visited_events': string[] = null\n\trecID: string\n\trec_id?: string\n\tphoto_200?: string\n\tnext_level?: iLevel\n\tcurrent_level?: iLevel\n\tneed_exp_to_level_up?: number\n}\n\nexport interface iModalData {\n\ttitle: string\n\tdesc: string\n\tonButtonClickHandler?: () => void\n\tbuttonLabel?: string\n\tbody?: any\n}\n\n\nexport class iAchieve {\n\trecID: string\n\t'Кол-во работ': number = null\n\t'RubricID': string = null\n\t'Name': string = null\n\t'Описание': string = null\n\t'Оценка': number = null\n\t'Таблица': string = null\n\t'Короткое описание': string = null\n\t'Опубликовано': boolean = null\n\tachievedItems?: any[]\n\tacivedItem?: any\n}\n\nexport class iRubric {\n\trecID: string;\n\tdesc: string;\n\t'Название': string = null;\n\t'Таблица': string = null;\n\t'Обложка': any[] = null;\n\t'Описание': string = null;\n\t'Итог опыт': number = null;\n\t'Тренировки': string[] = null;\n}\n\n\nexport class iHistoryItem {\n\trecID: string\n\t'VK-ID': number = null\n\t'Датавремя': string = null\n\t'Профиль'?: string[] = null\n\t'Рубрика': string[] = null\n\t'Комментарий': string = null\n\t'Баллы': number = null\n\t'Средняя': number = null\n\t'Макет': any[] = null\n\t'Опыт': number = null\n}","import React from 'react'\nimport { ModalCard } from '@vkontakte/vkui'\nimport { iModalData } from '../interfaces'\n\ninterface iModalCardComponent {\n    id: string\n    onClose: (foo: any) => void\n    modalData: iModalData\n}\n\nexport default class ModalCardComponent extends React.Component<iModalCardComponent, any> {\n    render() {\n        let {modalData} = this.props\n        return <ModalCard\n            id={this.props.id}\n            onClose={() => this.props.onClose(null)}\n            header={modalData ? modalData.title : ''}\n            caption={modalData ? modalData.desc : ''}\n            actions={modalData && modalData.onButtonClickHandler ? [{\n                title: modalData ? modalData.buttonLabel : '',\n                mode: 'primary', action: () => { \n                    this.props.onClose(null)\n                     return modalData ? modalData.onButtonClickHandler() : null\n                }\n            }] : []}\n        >\n            {modalData ? modalData.body : ''}\n        </ModalCard>\n    }\n}","import { AirtableConnector, iAirtableListOptions } from './Airtable';\n// import * as admin from 'firebase-admin';\n\n\n// Events //\n\nexport interface iEventType {\n    level?: number,\n    isAvailableToUser?: (user: any) => boolean\n}\n\nexport interface iEventFileds {\n    event_type_id?: string\n}\n\nexport interface iEvent extends iEventFileds {\n    isAvailableToUser?: (user: any) => boolean\n}\n\nexport interface iEventCreate {\n    title?: string\n}\n\nexport interface iEventUpdate {\n    title?: string\n}\n\ntype eventFields = 'Name' | 'Уровень' | 'Тренировки' | 'Описание' | 'Рубрика' | 'День' | 'Опубликовано' | 'RubricID' | 'Опыт рубрики' | 'Навыки' | 'key' | 'Skills' | 'Уровень' | 'level_no' | 'recID'\n\ninterface iEventListOptions extends iAirtableListOptions {\n    fields?: eventFields[]\n}\n\nclass EventTypes {\n    private listName = 'Тип тренировки';\n\n    constructor(private base: AirtableConnector) { }\n\n    list = async (params?: iEventListOptions): Promise<EventType[]> => this.base.list(this.listName, params)\n        .then(res => res.map(el => new EventType(el)))\n\n    getByID = async (id: string): Promise<Event> => this.base.getByID(id, this.listName)\n    // create = async (data: iEventCreate[]) => this.base.create(data).then(res => res.map(el => new Event(el)))\n    // update = async (data: iEventUpdate[]) => this.base.update(data).then(res => res.map(el => new Event(el)))\n};\n\n// class Users {\n//     private listName = 'Участники';\n//     constructor(private base: AirtableConnector, firebase: FBConnector) { }\n//     list = async (filter?: iEventFileds): Promise<EventType[]> => this.base.list(this.listName, { filter: filter })\n//         .then(res => res.map(el => new EventType(el)))\n// }\n\nclass Events {\n    private listName = 'Тренировки';\n    constructor(private base: AirtableConnector) { }\n\n    list = async (params?: iAirtableListOptions, include_event_type?: boolean): Promise<Event[]> => this.base.list(this.listName, params).then(res => {\n        if (!include_event_type) return res\n\n        let proms = res.map(el => new EventTypes(this.base).getByID(el.event_type_id).then(event_type => {\n            el.event_type = new EventType(event_type)\n            return el\n        }))\n        return Promise.all(proms).then(res => res.map(el => new Event(el)))\n    })\n};\n\ntype iLevelFields = 'Number'\n    | 'Требует опыта'\n    | 'Товары'\n    | 'Тип тренировки'\n    | 'Навыки'\n    | 'recID'\n\ninterface iLevelListOption extends iAirtableListOptions {\n    fields?: iLevelFields[]\n}\n\nclass Levels {\n    private listName = 'Уровни дизайнера';\n    constructor(private base: AirtableConnector) { }\n    list = async (params?: iLevelListOption): Promise<Level[]> => this.base.list(this.listName, params)\n        .then(res => res.map(el => new Level(el)))\n}\n\nexport interface iLevel {\n    'Number'?: any\n    'Требует опыта'?: any\n    'Товары'?: any\n    'Тип тренировки'?: any\n    'Навыки'?: any\n    'recID'?: any\n}\n\nclass Level implements iLevel {\n    'Number': any\n    'Требует опыта': any\n    'Товары': any\n    'Тип тренировки': any\n    'Навыки': any\n    'recID': any\n    constructor(data: iLevel) {\n        if (data) Object.keys(data).map(key => this[key] = data[key])\n    }\n}\n\nclass EventType {\n    'level_no': any\n    'Уровень': any\n    'Name': any\n    'Тренировки': any\n    'Описание': any\n    'Рубрика': any\n    'День': any\n    'Опубликовано': any\n    'RubricID': any\n    'Опыт рубрики': any\n    'Навыки': any\n    'key': any\n    'Статус': any\n    'Skills': any\n    'recID': any\n    event_type_id?: string\n    constructor(data: iEventType) {\n        if (data) Object.keys(data).map(key => this[key] = data[key])\n    }\n    isAvailableToUser = (user: any) => user.level >= this.level_no\n}\n\nclass Event implements iEvent {\n    constructor(data: iEventType) {\n        if (data) Object.keys(data).map(key => this[key] = data[key])\n    }\n\n    // isAvailableToUser = (user: any) => user.level >= this.level\n}\n\n\ninterface iApiConfig {\n    airtable_conf: { apikey: string, base: string },\n    firebase_service_account?: any\n}\n\n\nexport default class Api {\n    \n    constructor(private params: iApiConfig) {}\n    event_types = new EventTypes(new AirtableConnector(this.params.airtable_conf))\n    events = new Events(new AirtableConnector(this.params.airtable_conf))\n    levels = new Levels(new AirtableConnector(this.params.airtable_conf))\n    // users = new Users(new AirtableConnector(this.params.airtable_conf))\n}\n\n\n// export class FBConnector {\n\n// \tprotected db\n\n// \tconstructor(serviceAccount: any) {\n\n//         admin.initializeApp({\n//             credential: admin.credential.cert(serviceAccount)\n//         });\n\n//         this.db = admin.firestore();\n// \t}\n\n// \tgetByID(rec_id: string, listName: string): Promise<any> {\n// \t\treturn this.db.collection(listName).doc(rec_id).get()\n// \t\t\t.then((doc) => {\n// \t\t\t\tif (!doc.exists) {\n// \t\t\t\t\tconsole.log('No such document!');\n// \t\t\t\t} else {\n// \t\t\t\t\treturn doc.data()\n// \t\t\t\t}\n// \t\t\t})\n// \t\t\t.catch((err) => {\n// \t\t\t\tconsole.log('Error getting documents', err);\n// \t\t\t});\n// \t}\n\n// \tget(listName: string, filter?: any) {\n// \t\tlet filt = filter ? this.generateFilterString(filter) : null\n// \t\tlet request = filt ? this.db.collection(listName).where(filt.key, filt.condition, filt.value) : this.db.collection(listName)\n\n// \t\treturn request.get().then(snapshot => {\n// \t\t\tif (snapshot.empty) {\n// \t\t\t\tconsole.log('No matching documents.');\n// \t\t\t\treturn [];\n// \t\t\t}\n// \t\t\tlet data: any[] = []\n\n// \t\t\tsnapshot.forEach(doc => {\n// \t\t\t\tlet obj = doc.data();\n// \t\t\t\tobj.id = doc.id\n// \t\t\t\tdata.push(obj)\n// \t\t\t});\n// \t\t\treturn data\n// \t\t})\n// \t}\n\n// \tcreate(dataArray: [{ id?: string, fields: any }], listName: string): Promise<any> {\n// \t\tlet proms = dataArray.map(data => data.id ? this.db.collection(listName).doc(data.id).set(data.fields) : this.db.collection(listName).add(data.fields))\n\n// \t\treturn Promise.all(proms)\n// \t}\n\n// \tasync update(params: { id: string, fields: any }[], listName: string) {\n\n// \t\t// var result = [];\n// \t\t// var arrays = [],\n// \t\t\t// size = 10\n\n// \t\t// while (params.length > 0) arrays.push(params.splice(0, size))\n// \t\t// for (const bunch of arrays) {\n// \t\t\tlet proms = params.map(field => this.db.collection(listName).doc(field.id).update(field.fields))\n// \t\t\t// await \n// \t\t\t// await setTimeout(() => { }, 2000)\n// \t\t// }\n// \t\treturn Promise.all(proms)\n// \t}\n\n// \tprotected generateFilterString = (fileds: any): { key: string, value: any, condition: string } => {\n\n// \t\tlet keys = Object.keys(fileds)\n\n// \t\tlet arr: any[] = []\n// \t\tkeys.map(key => {\n// \t\t\tlet reg = /^([><=!]*)(.*)/gs\n// \t\t\tlet value = fileds[key].replace(reg, '$2');\n// \t\t\tlet condition = fileds[key].replace(reg, '$1')\n// \t\t\tarr.push({\n// \t\t\t\tkey: key,\n// \t\t\t\tvalue: value,\n// \t\t\t\tcondition: condition\n// \t\t\t})\n// \t\t})\n\n// \t\treturn arr[0]\n// \t}\n// }","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { platform, ANDROID, View, ModalRoot, ModalPage, ModalPageHeader, PanelHeaderButton } from '@vkontakte/vkui';\nimport * as Typograf from 'typograf';\nimport { air_schema } from 'lean-air';\nimport splash from './img/splash.GIF';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport \"./main.css\";\nimport { AMOUNT_TO_NEW_USER } from './constants';\nimport Rubric from './components/Rubric/Rubric';\nimport Profile from './components/Profile/Profile';\nimport LessonCard from './components/LessonCard/LessonCard';\nimport { ProgressSnackBar } from './components/ProgressSnackbar/ProgressSnackBar';\nimport { iModalData, iUser, iRubric, iAchieve, iHistoryItem } from './interfaces';\nimport ModalCardComponent from './components/ModalCardComponent';\nimport { parseQueryString } from './Helpers';\nimport Airtable from './Airtable'\nimport Iframe from 'react-iframe'\nimport { AIR_CONFIG } from './config'\nimport Api from './Api'\n\n\nlet base = new Airtable(AIR_CONFIG)\nlet api = new Api({ airtable_conf: AIR_CONFIG })\n\nconst tp = new Typograf({ locale: ['ru', 'en-US'] });\n\nconst splashLoader = <div style={{ width: '100%', height: '100%', backgroundColor: '#770EFD' }}><img src={splash} style={{ width: '100%', height: '100%' }} alt=\"loading...\" /></div>;\n\nconst osname = platform();\n\n\ninterface iAppState {\n\tuser: iUser\n\tactiveView: string\n\tactiveModal: string\n\tmodalData: iModalData\n\tauthToken: string\n\tisLoading: boolean\n\thistory: any[]\n\trubrics: iRubric[]\n\tmeta: any\n\tsnackbar: any\n\tpurchases: any[]\n\tachieves: any[]\n\tevents: any[]\n}\n\nclass App extends React.Component<any, iAppState> {\n\n\t_isMounted: boolean\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\n\n\t\tthis.state = {\n\t\t\tuser: null,\n\t\t\tactiveView: null,\n\t\t\tactiveModal: null,\n\t\t\tmodalData: null,\n\t\t\tauthToken: null,\n\t\t\tisLoading: false,\n\t\t\thistory: [],\n\t\t\trubrics: [],\n\t\t\tmeta: {},\n\t\t\tsnackbar: null,\n\t\t\tpurchases: null,\n\t\t\tachieves: null,\n\t\t\tevents: null\n\t\t};\n\n\t\tthis.openSnackbar = this.openSnackbar.bind(this);\n\t\tthis.setActiveModal = this.setActiveModal.bind(this);\n\t\tthis._isMounted = false\n\t}\n\n\n\n\tsetActiveModal(modal: { type: string, data?: iModalData }) {\n\t\tlet activeModal = modal ? modal.type : null\n\t\tlet modalData = modal ? modal.data : null\n\t\tthis.setState({\n\t\t\tactiveModal,\n\t\t\tmodalData\n\t\t})\n\t}\n\n\n\n\tasync componentDidMount() {\n\n\t\tthis._isMounted = true;\n\n\t\tthis.setState({ isLoading: true })\n\n\t\tbridge.subscribe(async (e: any) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tlet rubrics = await this.fetchRubricsData()\n\t\t\t\t\tlet history = await this.fetchHistoryData(rubrics, e.detail.data)\n\t\t\t\t\tlet userData = await this.fetchUserData(e.detail.data);\n\t\t\t\t\tlet purchases = await this.fetchUserPurchases(userData[air_schema.f_users.vk_id]);\n\t\t\t\t\tlet achieves = await this.fetchAchieves() as any[];\n\t\t\t\t\tlet events = await this.fetchEventsByUser(userData)\n\n\n\t\t\t\t\tawait api.levels.list({\n\t\t\t\t\t\tfilterByFormula: `OR({Number}=${userData['Уровень'] + 1}, {Number}=${userData['Уровень']})`\n\t\t\t\t\t}).then(res => {\n\t\t\t\t\t\tuserData.next_level = res.find(el => el.Number === userData['Уровень'] + 1)\n\t\t\t\t\t\tuserData.current_level = res.find(el => el.Number === userData['Уровень'])\n\t\t\t\t\t\tlet need_level_exp = userData.next_level[\"Требует опыта\"] - userData.current_level['Требует опыта']\n\t\t\t\t\t\tlet user_level_exp = userData['Опыт'] - userData.current_level['Требует опыта']\n\t\t\t\t\t\tuserData.need_exp_to_level_up = need_level_exp;\n\t\t\t\t\t\tuserData.levelExperience = user_level_exp\n\t\t\t\t\t\treturn \n\t\t\t\t\t})\n\n\n\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tevents: events,\n\t\t\t\t\t\trubrics: rubrics,\n\t\t\t\t\t\thistory: history,\n\t\t\t\t\t\tpurchases: purchases,\n\t\t\t\t\t\tuser: Object.assign(e.detail.data, userData),\n\t\t\t\t\t\tachieves: achieves\n\t\t\t\t\t})\n\n\t\t\t\t\tconst hashParams = parseQueryString(window.location.hash);\n\n\t\t\t\t\tif (hashParams.r === 'lesson' && hashParams.id) {\n\t\t\t\t\t\tthis.setState({ activeView: 'lesson', meta: { lessonID: hashParams.id }, isLoading: false })\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setState({ activeView: 'profile', isLoading: false })\n\t\t\t\t\t}\n\n\n\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VKWebAppAccessTokenReceived':\n\t\t\t\t\tthis.setState({ authToken: e.detail.data.access_token });\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VKWebAppViewRestore':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VKWebAppAllowNotificationsResult':\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\n\t\t\t}\n\t\t});\n\n\t\t(osname === ANDROID) ? bridge.send(\"VKWebAppSetViewSettings\", { \"status_bar_style\": \"light\", \"action_bar_color\": \"#000000\" }) : bridge.send(\"VKWebAppSetViewSettings\", { \"status_bar_style\": \"light\", });\n\t\tbridge.send('VKWebAppGetUserInfo', {});\n\n\t}\n\n\n\tcomponentWillUnmount() {\n\t\tthis._isMounted = false;\n\t}\n\n\n\n\tasync fetchUserData(user: iUser): Promise<iUser> {\n\t\tlet fields = new iUser()\n\t\tlet data: any\n\t\tdata = await base.list(air_schema.t_users, {\n\t\t\tfilterByFormula: `{${air_schema.f_users.vk_id}} = ${user.id}`, fields: Object.keys(fields).filter(key => fields[key] !== undefined)\n\t\t}).then(res => res[0]);\n\n\t\treturn data ? data : base.create([{\n\t\t\tfields:\n\t\t\t\t{ [air_schema.f_users.name]: `${user.first_name} ${user.last_name}`, [air_schema.f_users.vk_id]: user.id }\n\t\t}], air_schema.t_users)\n\t\t\t.then(res => base.create([{\n\t\t\t\tfields: {\n\t\t\t\t\t[air_schema.f_history.points]: AMOUNT_TO_NEW_USER,\n\t\t\t\t\t[air_schema.f_history.user]: [res[0].recID],\n\t\t\t\t\t[air_schema.f_history.comment]: \"Первое начисление\"\n\t\t\t\t}\n\t\t\t}], air_schema.t_history))\n\n\t}\n\n\n\n\tasync fetchUserPurchases(userID: number): Promise<any> {\n\t\treturn base.list(air_schema.t_purchases, { filterByFormula: `AND({${air_schema.f_purchases.vk_id}}=${userID}, NOT({${air_schema.f_purchases.status}}=\"Архив\"))` })\n\t}\n\n\n\n\tasync fetchRubricsData(): Promise<iRubric[]> {\n\t\tlet fields = new iRubric();\n\n\t\tlet rubrics = await base.list('Рубрики', {\n\t\t\tfilterByFormula: '{Опубликовано} = TRUE()',\n\t\t\tfields: Object.keys(fields).filter(key => fields[key] !== undefined)\n\n\t\t}).catch(e => []) as iRubric[]\n\n\t\treturn rubrics.map((obj: iRubric) => {\n\t\t\tif (obj['Описание']) {\n\t\t\t\tobj['Описание'] = tp.execute(obj['Описание']);\n\t\t\t\tobj.desc = obj['Описание'].replace(/[*#|]/gs, '').slice(0, 60)\n\t\t\t\tif (obj.desc.length < obj['Описание'].length) obj.desc = obj.desc + \"…\"\n\t\t\t}\n\n\t\t\treturn obj\n\t\t}) as iRubric[];\n\n\t}\n\n\n\tfetchAchieves() {\n\t\tlet fields = new iAchieve();\n\t\treturn base.list('Ачивки', {\n\t\t\tsort: [{ field: 'Кол-во работ', direction: 'asc' }, { field: 'Сложность', direction: 'asc' }],\n\t\t\tfilterByFormula: 'NOT({Опубликовано}=BLANK())',\n\t\t\tfields: Object.keys(fields).filter(key => fields[key] !== undefined)\n\t\t}).catch(e => [])\n\t}\n\n\tasync fetchHistoryData(rubrics: any[], user: any) {\n\t\tlet fields = new iHistoryItem();\n\t\tlet proms = rubrics.map(rubric =>\n\t\t\tbase.list(\n\t\t\t\trubric['Таблица'],\n\t\t\t\t{\n\t\t\t\t\tview: 'Последний месяц',\n\t\t\t\t\tsort: [{ field: 'Датавремя', direction: 'desc' }],\n\t\t\t\t\tmaxRecords: 10,\n\t\t\t\t\tfilterByFormula: `{VK-ID} = ${user.id}`,\n\t\t\t\t\tfields: Object.keys(fields).filter(key => fields[key] !== undefined)\n\t\t\t\t})\n\t\t)\n\n\t\treturn Promise.all(proms).then((res: Array<[]>) => [].concat(...res))\n\t}\n\n\tasync fetchEventsByUser(user: iUser) {\n\n\t\tlet filter = user.visited_events.map(el => `NOT({recID}=\"${el}\")`).join(',')\n\t\n\n\t\treturn  api.events.list({\n\t\t\tfilterByFormula: `AND(${filter})`,\n\t\t\tview: 'На главной в Линии',\n\t\t\tmaxRecords: 5\n\t\t}, true) \n\n\t}\n\n\n\t// onStoryChange = (e) => this.setState({ activeStory: e.currentTarget.dataset.story })\n\n\tsetLocation = (route: string) => {\n\t\tif (route !== 'profile') {\n\t\t\tbridge.send('VKWebAppSetLocation', { location: route });\n\t\t} else {\n\t\t\tbridge.send('VKWebAppSetLocation', { location: '' });\n\t\t}\n\t}\n\n\topenSnackbar() {\n\t\tif (this.state.snackbar) return;\n\t\tlet percent = this.state.user.levelExperience\n\t\tthis.setState({\n\t\t\tsnackbar: <ProgressSnackBar header={`${percent} / 1000 ед. опыта`} count={percent * 0.1} />\n\t\t});\n\t}\n\n\tgo = (route: string, meta?: any) => {\n\t\tif (meta) this.setState({ meta: meta })\n\t\tthis.setState({ activeView: route })\n\t\treturn\n\t};\n\n\tonRubricCellClickHandler = (route: string, meta: any) => {\n\t\tthis.setState({ activeView: route })\n\t\tthis.setState({ meta: meta })\n\t}\n\n\tfetchLessons = async () => {\n\t\treturn api.events.list({ view: 'Ближайшие', filterByFormula: `NOT({Дата}=BLANK())` }, true)\n\n\t}\n\n\n\trender() {\n\n\t\tconst {\n\t\t\tuser,\n\t\t\tisLoading,\n\t\t\thistory,\n\t\t\trubrics,\n\t\t\tachieves,\n\t\t\tpurchases,\n\t\t\tmeta\n\t\t} = this.state;\n\n\t\tif (!user || isLoading) return splashLoader;\n\n\n\n\t\tconst modal =\n\t\t\t(<ModalRoot\n\t\t\t\tactiveModal={this.state.activeModal}\n\t\t\t\tonClose={() => this.setState({ activeModal: null })}\n\t\t\t>\n\n\t\t\t\t<ModalCardComponent\n\t\t\t\t\tid='modal'\n\t\t\t\t\tonClose={() => this.setActiveModal(null)}\n\t\t\t\t\tmodalData={this.state.modalData} />\n\t\t\t\t<ModalPage\n\t\t\t\t\tid='paid'\n\t\t\t\t\tonClose={() => this.setActiveModal(null)}\n\t\t\t\t\theader={\n\t\t\t\t\t\t<ModalPageHeader\n\t\t\t\t\t\t\t// left={<PanelHeaderButton onClick={() => this.setActiveModal(null)}>×</PanelHeaderButton>}\n\t\t\t\t\t\t\tright={<PanelHeaderButton onClick={() => this.setActiveModal(null)}>Готово</PanelHeaderButton>}\n\t\t\t\t\t\t></ModalPageHeader>\n\t\t\t\t\t}\n\t\t\t\t\tsettlingHeight={100}\n\t\t\t\t>\n\t\t\t\t\t<div style={{ height: '100vh' }} >\n\t\t\t\t\t\t<Iframe url={`https://app.leandesign.pro/p/pay?user_id=${user.id}`}\n\t\t\t\t\t\t\tframeBorder=\"0\"\n\t\t\t\t\t\t\t// scrolling=\"no\"\n\t\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t\theight=\"100%\"\n\t\t\t\t\t\t\tid=\"myId\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t</ModalPage>\n\t\t\t\t<ModalPage\n\t\t\t\t\tid='instruction'\n\t\t\t\t\tonClose={() => this.setActiveModal(null)}\n\t\t\t\t\tsettlingHeight={60}\n\t\t\t\t\theader={\n\t\t\t\t\t\t<ModalPageHeader\n\t\t\t\t\t\t\t// left={<PanelHeaderButton onClick={() => this.setActiveModal(null)}>×</PanelHeaderButton>}\n\t\t\t\t\t\t\tright={<PanelHeaderButton onClick={() => this.setActiveModal(null)}>Готово</PanelHeaderButton>}\n\t\t\t\t\t\t></ModalPageHeader>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\t{this.state.modalData ? this.state.modalData.body : null}\n\t\t\t\t</ModalPage>\n\t\t\t</ModalRoot>)\n\n\t\treturn (\n\t\t\t<View id=\"main\" activePanel={this.state.activeView} modal={modal}>\n\t\t\t\t<Profile\n\t\t\t\t\tid=\"profile\"\n\t\t\t\t\tsnackbar={this.state.snackbar}\n\t\t\t\t\topenSnackbar={this.openSnackbar}\n\t\t\t\t\trubrics={rubrics}\n\t\t\t\t\tgo={this.go}\n\t\t\t\t\tuser={user}\n\t\t\t\t\thistory={history}\n\t\t\t\t\tachieves={achieves}\n\t\t\t\t\topenModal={(modal) => this.setActiveModal(modal)}\n\t\t\t\t\tevents={this.state.events}\n\t\t\t\t\tgetEvents={this.fetchLessons}\n\t\t\t\t/>\n\t\t\t\t<Rubric\n\t\t\t\t\tid='rubric'\n\t\t\t\t\tuser={user}\n\t\t\t\t\trubric={meta}\n\t\t\t\t\tgo={this.go}\n\t\t\t\t\trubricCellClickHandler={this.go}\n\t\t\t\t\tgetLessons={this.fetchLessons}\n\t\t\t\t/>\n\t\t\t\t<LessonCard\n\t\t\t\t\tid=\"lesson\"\n\t\t\t\t\tonBackClick={this.go}\n\t\t\t\t\tlessonID={meta.lessonID}\n\t\t\t\t\tlesson={meta.lesson}\n\t\t\t\t\tuser={user}\n\t\t\t\t\tpurchases={purchases}\n\t\t\t\t\tbackTo={meta.backTo}\n\t\t\t\t\topenModal={(modal) => this.setActiveModal(modal)}\n\t\t\t\t/>\n\t\t\t</View >\n\t\t)\n\t}\n}\n\n\nexport default App;\n\n","export const AIRTABLE_APIKEY = 'keyCjoy0c7MaRyisi';\nexport const AIRTABLE_BASE = 'appEXq7BJ3ceoFRtr';\nexport const VK_APP_ID = 7215450; //prod\nexport const VK_GROUP_ID = 120547095; \nexport const VK_ADMIN_ACCESS_TOKEN = '25bec7da203afb629e05ec40bb284d3f196a85c0a0539b7cb428717a6a24782f883bd139e721167c775f3';\nexport const VK_SERVISE_KEY = 'f60c2422f60c2422f60c242263f6623d78ff60cf60c2422abd8f8acb1ae9af95c999324'//prod\n\n\nexport const AMOUNT_TO_NEW_USER = 25;\n\n\nexport const BASE_TRAIN = 'Тренировки';\nexport const VIEW_TRAIN_UPCOMING = 'Ближайшие';","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport bridge from '@vkontakte/vk-bridge';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nbridge.send('VKWebAppInit');\n\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}